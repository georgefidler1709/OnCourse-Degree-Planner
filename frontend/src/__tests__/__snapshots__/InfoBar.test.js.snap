// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Has collapsable sections can expand a section 1`] = `
<Timeline
  match={
    Object {
      "params": Object {
        "degree": "3778",
        "reqs": undefined,
      },
    }
  }
>
  <div>
    <Navbar
      bg="dark"
      collapseOnSelect={false}
      expand={true}
      id="navbar"
      variant="dark"
    >
      <nav
        className="navbar navbar-expand navbar-dark bg-dark"
        id="navbar"
      >
        <NavbarBrand
          href="/"
        >
          <a
            className="navbar-brand"
            href="/"
          >
             
            <styled.img
              alt="logo"
              src="/images/logo.png"
            >
              <StyledComponent
                alt="logo"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cMljjf",
                      "isStatic": false,
                      "lastClassName": "fmxJth",
                      "rules": Array [
                        "
  width: 5%;
  height: 5%;
  margin: 1%;
",
                      ],
                    },
                    "displayName": "styled.img",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cMljjf",
                    "target": "img",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                src="/images/logo.png"
              >
                <img
                  alt="logo"
                  className="sc-cMljjf fmxJth"
                  src="/images/logo.png"
                />
              </StyledComponent>
            </styled.img>
             OnCourse
          </a>
        </NavbarBrand>
        <Nav
          className="mr-auto"
          fill={false}
          justify={false}
        >
          <ForwardRef
            as="div"
            className="mr-auto navbar-nav"
            onSelect={[Function]}
          >
            <div
              className="mr-auto navbar-nav"
              onKeyDown={[Function]}
            />
          </ForwardRef>
        </Nav>
        <Styled(Button)
          id="save"
          onClick={[Function]}
          variant="outline-info"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jAaTju",
                  "isStatic": false,
                  "lastClassName": "hGJEqN",
                  "rules": Array [
                    "
  margin: 0px 8px;
",
                  ],
                },
                "displayName": "Styled(Button)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jAaTju",
                "target": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="save"
            onClick={[Function]}
            variant="outline-info"
          >
            <Button
              active={false}
              className="sc-jAaTju hGJEqN"
              disabled={false}
              id="save"
              onClick={[Function]}
              type="button"
              variant="outline-info"
            >
              <button
                className="sc-jAaTju hGJEqN btn btn-outline-info"
                disabled={false}
                id="save"
                onClick={[Function]}
                type="button"
              >
                <i
                  className="fa fa-save"
                />
              </button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
      </nav>
    </Navbar>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eHgmQL",
              "isStatic": false,
              "lastClassName": "jXXGiK",
              "rules": Array [
                "
  display: flex;
  justify-content: center;
  margin: 0px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eHgmQL",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-eHgmQL jXXGiK"
        >
          <DragDropContext
            onDragEnd={[Function]}
            onDragStart={[Function]}
          >
            <ErrorBoundary>
              <App
                contextId="3"
                liftInstruction="Draggable item. Ensure your screen reader is not in browse mode and then press space bar to lift."
                onDragEnd={[Function]}
                onDragStart={[Function]}
                setCallbacks={[Function]}
              >
                <Provider
                  context={
                    Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": null,
                      "_currentValue2": null,
                      "_threadCount": 0,
                    }
                  }
                  store={
                    Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    }
                  }
                >
                  <div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-jWBwVP",
                              "isStatic": false,
                              "lastClassName": "jPdbIS",
                              "rules": Array [
                                "
  float: left;
  width: 70%;
  padding: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-jWBwVP",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-jWBwVP jPdbIS"
                        >
                          <div
                            id="timeline"
                          >
                            <div
                              key="2019"
                            >
                              <styled.div
                                key="2019"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "MATH1131",
                                            "coreqs": "",
                                            "equivalents": "DPST1013",
                                            "exclusions": "DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202",
                                            "name": "Mathematics 1A",
                                            "prereqs": "",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "MATH1081",
                                            "coreqs": "(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)",
                                            "equivalents": "",
                                            "exclusions": "MATH1090",
                                            "name": "Discrete Mathematics",
                                            "prereqs": "",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2019"
                                      removeCourse={[Function]}
                                      termId="1 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="1 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="1 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="1 2019"
                                                    >
                                                      <Course
                                                        code="MATH1131"
                                                        coreqs=""
                                                        equivalents="DPST1013"
                                                        exclusions="DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202"
                                                        index={0}
                                                        key="MATH1131"
                                                        name="Mathematics 1A"
                                                        prereqs=""
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1131"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1131"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1131"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1131"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="MATH1131"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="MATH1131"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="MATH1131"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="MATH1131"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="MATH1131"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="MATH1131"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1131
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1131"
                                                            coreqs=""
                                                            equivalents="DPST1013"
                                                            exclusions="DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202"
                                                            index={0}
                                                            name="Mathematics 1A"
                                                            onHide={[Function]}
                                                            prereqs=""
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="MATH1081"
                                                        coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                        equivalents=""
                                                        exclusions="MATH1090"
                                                        index={1}
                                                        key="MATH1081"
                                                        name="Discrete Mathematics"
                                                        prereqs=""
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1081"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1081"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1081"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1081"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="MATH1081"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="MATH1081"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="MATH1081"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="MATH1081"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="MATH1081"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="MATH1081"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1081
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1081"
                                                            coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                            equivalents=""
                                                            exclusions="MATH1090"
                                                            index={1}
                                                            name="Discrete Mathematics"
                                                            onHide={[Function]}
                                                            prereqs=""
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP1521",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "DPST1092",
                                            "name": "Computer Systems Fundamentals",
                                            "prereqs": "(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "MATH1231",
                                            "coreqs": "",
                                            "equivalents": "DPST1014",
                                            "exclusions": "ECON1202
MATH1241
DPST1014",
                                            "name": "Mathematics 1B",
                                            "prereqs": "(DPST1013 OR MATH1131 OR MATH1141)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2019"
                                      removeCourse={[Function]}
                                      termId="2 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="2 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="2 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="2 2019"
                                                    >
                                                      <Course
                                                        code="COMP1521"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="DPST1092"
                                                        index={0}
                                                        key="COMP1521"
                                                        name="Computer Systems Fundamentals"
                                                        prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP1521"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP1521"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP1521"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP1521"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP1521"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP1521"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP1521"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP1521"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP1521"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP1521"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP1521
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP1521"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="DPST1092"
                                                            index={0}
                                                            name="Computer Systems Fundamentals"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="MATH1231"
                                                        coreqs=""
                                                        equivalents="DPST1014"
                                                        exclusions="ECON1202
MATH1241
DPST1014"
                                                        index={1}
                                                        key="MATH1231"
                                                        name="Mathematics 1B"
                                                        prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1231"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1231"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1231"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1231"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="MATH1231"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="MATH1231"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="MATH1231"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="MATH1231"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="MATH1231"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="MATH1231"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1231
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1231"
                                                            coreqs=""
                                                            equivalents="DPST1014"
                                                            exclusions="ECON1202
MATH1241
DPST1014"
                                                            index={1}
                                                            name="Mathematics 1B"
                                                            onHide={[Function]}
                                                            prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP1531",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "SENG1020
SENG1031
SENG1010",
                                            "name": "Software Engineering Fundamentals",
                                            "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "COMP2521",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "COMP1927",
                                            "name": "Data Structures and Algorithms",
                                            "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2019"
                                      removeCourse={[Function]}
                                      termId="3 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="3 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="3 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="3 2019"
                                                    >
                                                      <Course
                                                        code="COMP1531"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="SENG1020
SENG1031
SENG1010"
                                                        index={0}
                                                        key="COMP1531"
                                                        name="Software Engineering Fundamentals"
                                                        prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP1531"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP1531"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP1531"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP1531"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP1531"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP1531"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP1531"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP1531"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP1531"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP1531"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP1531
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP1531"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="SENG1020
SENG1031
SENG1010"
                                                            index={0}
                                                            name="Software Engineering Fundamentals"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="COMP2521"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="COMP1927"
                                                        index={1}
                                                        key="COMP2521"
                                                        name="Data Structures and Algorithms"
                                                        prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP2521"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP2521"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP2521"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP2521"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP2521"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP2521"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP2521"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP2521"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP2521"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP2521"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP2521
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP2521"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="COMP1927"
                                                            index={1}
                                                            name="Data Structures and Algorithms"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                            <div
                              key="2020"
                            >
                              <styled.div
                                key="2020"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2020"
                                      removeCourse={[Function]}
                                      termId="1 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="1 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="1 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="1 2020"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP3121",
                                            "coreqs": "",
                                            "equivalents": "COMP3821
COMP9801
COMP3120
COMP9101",
                                            "exclusions": "",
                                            "name": "Algorithms and Programming Techniques",
                                            "prereqs": "(COMP1927 OR COMP2521)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "COMP2511",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "COMP2911
COMP2011",
                                            "name": "Object-Oriented Design & Programming",
                                            "prereqs": "COMP1531
(COMP1927 OR COMP2521)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2020"
                                      removeCourse={[Function]}
                                      termId="2 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="2 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="2 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="2 2020"
                                                    >
                                                      <Course
                                                        code="COMP3121"
                                                        coreqs=""
                                                        equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                        exclusions=""
                                                        index={0}
                                                        key="COMP3121"
                                                        name="Algorithms and Programming Techniques"
                                                        prereqs="(COMP1927 OR COMP2521)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP3121"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP3121"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP3121"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP3121"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP3121"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP3121"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP3121"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP3121"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP3121"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP3121"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP3121
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP3121"
                                                            coreqs=""
                                                            equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                            exclusions=""
                                                            index={0}
                                                            name="Algorithms and Programming Techniques"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1927 OR COMP2521)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="COMP2511"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="COMP2911
COMP2011"
                                                        index={1}
                                                        key="COMP2511"
                                                        name="Object-Oriented Design & Programming"
                                                        prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP2511"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP2511"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP2511"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP2511"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP2511"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP2511"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP2511"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP2511"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP2511"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP2511"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP2511
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP2511"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="COMP2911
COMP2011"
                                                            index={1}
                                                            name="Object-Oriented Design & Programming"
                                                            onHide={[Function]}
                                                            prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2020"
                                      removeCourse={[Function]}
                                      termId="3 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="3 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="3 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="3 2020"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                            <div
                              key="2021"
                            >
                              <styled.div
                                key="2021"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2021"
                                      removeCourse={[Function]}
                                      termId="1 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="1 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="1 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="1 2021"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2021"
                                      removeCourse={[Function]}
                                      termId="2 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="2 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="2 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="2 2021"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP4920",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "BINF4920
SENG4920
SENG4921
COMP2920",
                                            "name": "Management and Ethics",
                                            "prereqs": "Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)",
                                            "terms": Array [
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2021"
                                      removeCourse={[Function]}
                                      termId="3 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="3"
                                                  data-rbd-droppable-id="3 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="3"
                                                    data-rbd-droppable-id="3 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="3"
                                                      data-rbd-droppable-id="3 2021"
                                                    >
                                                      <Course
                                                        code="COMP4920"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="BINF4920
SENG4920
SENG4921
COMP2920"
                                                        index={0}
                                                        key="COMP4920"
                                                        name="Management and Ethics"
                                                        prereqs="Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP4920"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP4920"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP4920"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP4920"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-3"
                                                                    data-rbd-drag-handle-context-id="3"
                                                                    data-rbd-drag-handle-draggable-id="COMP4920"
                                                                    data-rbd-draggable-context-id="3"
                                                                    data-rbd-draggable-id="COMP4920"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-3"
                                                                      data-rbd-drag-handle-context-id="3"
                                                                      data-rbd-drag-handle-draggable-id="COMP4920"
                                                                      data-rbd-draggable-context-id="3"
                                                                      data-rbd-draggable-id="COMP4920"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-3"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="3"
                                                                        data-rbd-drag-handle-draggable-id="COMP4920"
                                                                        data-rbd-draggable-context-id="3"
                                                                        data-rbd-draggable-id="COMP4920"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP4920
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP4920"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="BINF4920
SENG4920
SENG4921
COMP2920"
                                                            index={0}
                                                            name="Management and Ethics"
                                                            onHide={[Function]}
                                                            prereqs="Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                          </div>
                          <Styled(Button)
                            onClick={[Function]}
                            variant="info"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jDwBTQ",
                                    "isStatic": false,
                                    "lastClassName": "cmgcpW",
                                    "rules": Array [
                                      "
&& {
  display: inline-block;
  font-weight: 400;
  font-size: 30px;
  padding: .375rem .75rem;
  border: 1px solid transparent;
  border-radius: .25rem;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
  min-width: 55px;
  margin: 6px;
  text-align: center;
  vertical-align: middle;
  padding: 0px;
",
                                    ],
                                  },
                                  "displayName": "Styled(Button)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jDwBTQ",
                                  "target": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "defaultProps": Object {
                                      "active": false,
                                      "disabled": false,
                                      "type": "button",
                                      "variant": "primary",
                                    },
                                    "displayName": "Button",
                                    "render": [Function],
                                  },
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              variant="info"
                            >
                              <Button
                                active={false}
                                className="sc-jDwBTQ cmgcpW"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="info"
                              >
                                <button
                                  className="sc-jDwBTQ cmgcpW btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  +
                                </button>
                              </Button>
                            </StyledComponent>
                          </Styled(Button)>
                          <Styled(Button)
                            onClick={[Function]}
                            variant="info"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jDwBTQ",
                                    "isStatic": false,
                                    "lastClassName": "cmgcpW",
                                    "rules": Array [
                                      "
&& {
  display: inline-block;
  font-weight: 400;
  font-size: 30px;
  padding: .375rem .75rem;
  border: 1px solid transparent;
  border-radius: .25rem;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
  min-width: 55px;
  margin: 6px;
  text-align: center;
  vertical-align: middle;
  padding: 0px;
",
                                    ],
                                  },
                                  "displayName": "Styled(Button)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jDwBTQ",
                                  "target": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "defaultProps": Object {
                                      "active": false,
                                      "disabled": false,
                                      "type": "button",
                                      "variant": "primary",
                                    },
                                    "displayName": "Button",
                                    "render": [Function],
                                  },
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              variant="info"
                            >
                              <Button
                                active={false}
                                className="sc-jDwBTQ cmgcpW"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="info"
                              >
                                <button
                                  className="sc-jDwBTQ cmgcpW btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  -
                                </button>
                              </Button>
                            </StyledComponent>
                          </Styled(Button)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-brqgnP",
                              "isStatic": false,
                              "lastClassName": "hpJmTp",
                              "rules": Array [
                                "
  display: flex;
  justify-content: flex-end;
  width: 30%;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-brqgnP",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-brqgnP hpJmTp"
                        >
                          <InfoBar
                            add_event={[Function]}
                            degree_id="3778"
                            degree_name="Computer Science"
                            degree_reqs={
                              Array [
                                Object {
                                  "filter_type": "Required courses",
                                  "info": "COMP3900",
                                  "units": 6,
                                },
                                Object {
                                  "filter_type": "Courses with options",
                                  "info": "[ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]",
                                  "units": 30,
                                },
                                Object {
                                  "filter_type": "General education",
                                  "info": "Any general education course",
                                  "units": 12,
                                },
                                Object {
                                  "filter_type": "Free electives",
                                  "info": "Any free elective",
                                  "units": 36,
                                },
                              ]
                            }
                            remove_course={[Function]}
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jKJlTe",
                                      "isStatic": false,
                                      "lastClassName": "cqzQuE",
                                      "rules": Array [
                                        "
  padding-top: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 350px;
  height: 100%;
  text-align: center;
  overflow-y: scroll;
  overflow: overlay;
  background-color: #343a40;
  color: white;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jKJlTe",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-jKJlTe cqzQuE"
                                >
                                  <styled.h3>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eNQAEJ",
                                            "isStatic": false,
                                            "lastClassName": "fJsUCm",
                                            "rules": Array [
                                              "
  padding: 8px;
  margin: 0px;
  font-family: inherit;
  border-bottom: 1px solid lightgrey;
  color: inherit;
",
                                            ],
                                          },
                                          "displayName": "styled.h3",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eNQAEJ",
                                          "target": "h3",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h3
                                        className="sc-eNQAEJ fJsUCm"
                                      >
                                        Computer Science
                                        <br />
                                        3778
                                      </h3>
                                    </StyledComponent>
                                  </styled.h3>
                                  <Styled(Card)
                                    bg="dark"
                                    text="white"
                                  >
                                    <StyledComponent
                                      bg="dark"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "Body": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardBody",
                                            "render": [Function],
                                          },
                                          "Footer": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardFooter",
                                            "render": [Function],
                                          },
                                          "Header": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardHeader",
                                            "render": [Function],
                                          },
                                          "Img": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": Object {
                                              "variant": null,
                                            },
                                            "displayName": "CardImg",
                                            "render": [Function],
                                          },
                                          "ImgOverlay": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardImgOverlay",
                                            "render": [Function],
                                          },
                                          "Link": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardLink",
                                            "render": [Function],
                                          },
                                          "Subtitle": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardSubtitle",
                                            "render": [Function],
                                          },
                                          "Text": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardText",
                                            "render": [Function],
                                          },
                                          "Title": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardTitle",
                                            "render": [Function],
                                          },
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kkGfuU",
                                            "isStatic": false,
                                            "lastClassName": "kUNnRZ",
                                            "rules": Array [
                                              "
",
                                            ],
                                          },
                                          "displayName": "Styled(Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kkGfuU",
                                          "target": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Body": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardBody",
                                              "render": [Function],
                                            },
                                            "Footer": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardFooter",
                                              "render": [Function],
                                            },
                                            "Header": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardHeader",
                                              "render": [Function],
                                            },
                                            "Img": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": Object {
                                                "variant": null,
                                              },
                                              "displayName": "CardImg",
                                              "render": [Function],
                                            },
                                            "ImgOverlay": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardImgOverlay",
                                              "render": [Function],
                                            },
                                            "Link": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardLink",
                                              "render": [Function],
                                            },
                                            "Subtitle": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardSubtitle",
                                              "render": [Function],
                                            },
                                            "Text": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardText",
                                              "render": [Function],
                                            },
                                            "Title": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardTitle",
                                              "render": [Function],
                                            },
                                            "defaultProps": Object {
                                              "body": false,
                                            },
                                            "displayName": "Card",
                                            "render": [Function],
                                          },
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="white"
                                    >
                                      <Card
                                        bg="dark"
                                        body={false}
                                        className="sc-kkGfuU kUNnRZ"
                                        text="white"
                                      >
                                        <div
                                          className="sc-kkGfuU kUNnRZ card bg-dark text-white"
                                        >
                                          <Styled(CardHeader)
                                            aria-controls="collapse-add-course"
                                            aria-expanded={true}
                                            onClick={[Function]}
                                          >
                                            <StyledComponent
                                              aria-controls="collapse-add-course"
                                              aria-expanded={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-iAyFgw",
                                                    "isStatic": false,
                                                    "lastClassName": "kQfvWD",
                                                    "rules": Array [
                                                      "
  transition: color 0.2s ease;
  color: rgba(255, 255, 255, 0.75);
  display: flex;
  align-items: center

  &:hover {
    color: rgba(255, 255, 255, 1)
  };

",
                                                    ],
                                                  },
                                                  "displayName": "Styled(CardHeader)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-iAyFgw",
                                                  "target": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": undefined,
                                                    "displayName": "CardHeader",
                                                    "render": [Function],
                                                  },
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                            >
                                              <CardHeader
                                                aria-controls="collapse-add-course"
                                                aria-expanded={true}
                                                className="sc-iAyFgw kQfvWD"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-controls="collapse-add-course"
                                                  aria-expanded={true}
                                                  className="sc-iAyFgw kQfvWD card-header"
                                                  onClick={[Function]}
                                                >
                                                  <styled.i
                                                    className="fa fa-chevron-down"
                                                  >
                                                    <StyledComponent
                                                      className="fa fa-chevron-down"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hSdWYo",
                                                            "isStatic": false,
                                                            "lastClassName": "ifQXLO",
                                                            "rules": Array [
                                                              "
  float: left;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.i",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hSdWYo",
                                                          "target": "i",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <i
                                                        className="sc-hSdWYo ifQXLO fa fa-chevron-down"
                                                      />
                                                    </StyledComponent>
                                                  </styled.i>
                                                  <styled.h5>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hMqMXs",
                                                            "isStatic": false,
                                                            "lastClassName": "igQMIg",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  text-align: center;
  width: 100%;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.h5",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hMqMXs",
                                                          "target": "h5",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <h5
                                                        className="sc-hMqMXs igQMIg"
                                                      >
                                                        Add a Course
                                                      </h5>
                                                    </StyledComponent>
                                                  </styled.h5>
                                                </div>
                                              </CardHeader>
                                            </StyledComponent>
                                          </Styled(CardHeader)>
                                          <Collapse
                                            appear={false}
                                            dimension="height"
                                            getDimensionValue={[Function]}
                                            in={true}
                                            mountOnEnter={false}
                                            timeout={300}
                                            unmountOnExit={false}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              aria-expanded={null}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={300}
                                              unmountOnExit={false}
                                            >
                                              <CardBody
                                                aria-expanded={null}
                                                className="collapse show"
                                              >
                                                <div
                                                  aria-expanded={null}
                                                  className="collapse show card-body"
                                                >
                                                  <p>
                                                    Search for a course and click on it. Then drag the course into your timeline from the 
                                                    <b>
                                                      Add
                                                    </b>
                                                     box.
                                                  </p>
                                                  <CourseDropBox
                                                    remove_course={[Function]}
                                                    type="Add"
                                                  >
                                                    <styled.div>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-EHOje",
                                                              "isStatic": false,
                                                              "lastClassName": "gIuBAP",
                                                              "rules": Array [
                                                                "
  margin: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 220px;

  margin-left: auto;
  margin-right: auto;

  display: flex;
  flex-direction: column;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-EHOje",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <div
                                                          className="sc-EHOje gIuBAP"
                                                        >
                                                          <styled.h5>
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-bZQynM",
                                                                    "isStatic": false,
                                                                    "lastClassName": "btxUkQ",
                                                                    "rules": Array [
                                                                      "
  padding: 8px;
",
                                                                    ],
                                                                  },
                                                                  "displayName": "styled.h5",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-bZQynM",
                                                                  "target": "h5",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <h5
                                                                className="sc-bZQynM btxUkQ"
                                                              >
                                                                Add
                                                              </h5>
                                                            </StyledComponent>
                                                          </styled.h5>
                                                          <ConnectFunction
                                                            direction="vertical"
                                                            droppableId="Add"
                                                            getContainerForClone={[Function]}
                                                            ignoreContainerClipping={false}
                                                            isCombineEnabled={false}
                                                            isDropDisabled={false}
                                                            mode="standard"
                                                            renderClone={null}
                                                            type="DEFAULT"
                                                          >
                                                            <Droppable
                                                              direction="vertical"
                                                              droppableId="Add"
                                                              getContainerForClone={[Function]}
                                                              ignoreContainerClipping={false}
                                                              isCombineEnabled={false}
                                                              isDropDisabled={false}
                                                              mode="standard"
                                                              placeholder={null}
                                                              renderClone={null}
                                                              shouldAnimatePlaceholder={false}
                                                              snapshot={
                                                                Object {
                                                                  "draggingFromThisWith": null,
                                                                  "draggingOverWith": null,
                                                                  "isDraggingOver": false,
                                                                  "isUsingPlaceholder": false,
                                                                }
                                                              }
                                                              type="DEFAULT"
                                                              updateViewportMaxScroll={[Function]}
                                                              useClone={null}
                                                            >
                                                              <styled.div
                                                                data-rbd-droppable-context-id="3"
                                                                data-rbd-droppable-id="Add"
                                                              >
                                                                <StyledComponent
                                                                  data-rbd-droppable-context-id="3"
                                                                  data-rbd-droppable-id="Add"
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "sc-gzVnrw",
                                                                        "isStatic": false,
                                                                        "lastClassName": "hQQdYy",
                                                                        "rules": Array [
                                                                          "
  padding: 8px;
  flex-grow: 1;
  min-height: 50px;
",
                                                                        ],
                                                                      },
                                                                      "displayName": "styled.div",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "sc-gzVnrw",
                                                                      "target": "div",
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={[Function]}
                                                                >
                                                                  <div
                                                                    className="sc-gzVnrw hQQdYy"
                                                                    data-rbd-droppable-context-id="3"
                                                                    data-rbd-droppable-id="Add"
                                                                  >
                                                                    <AnimateInOut
                                                                      on={null}
                                                                      shouldAnimate={false}
                                                                    />
                                                                  </div>
                                                                </StyledComponent>
                                                              </styled.div>
                                                            </Droppable>
                                                          </ConnectFunction>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </CourseDropBox>
                                                  <SearchCourses
                                                    add_event={[Function]}
                                                  >
                                                    <styled.div>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-kGXeez",
                                                              "isStatic": false,
                                                              "lastClassName": "fvprwv",
                                                              "rules": Array [
                                                                "
  padding: 3px;
  margin: 0;
  text-align: center;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-kGXeez",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <div
                                                          className="sc-kGXeez fvprwv"
                                                        >
                                                          <form>
                                                            <Styled(styled.input)
                                                              onChange={[Function]}
                                                              placeholder="Search for a course..."
                                                            >
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-kpOJdX",
                                                                      "isStatic": false,
                                                                      "lastClassName": "cgQYTz",
                                                                      "rules": Array [
                                                                        "

  &:focus {
    outline: none;
    &::placeholder {
      color: transparent;
    }
  }
  box-shadow: 10px 10px grey;
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 60%;
  padding: 1% 4%;
  margin-bottom: 2%;
  transition: background-colour .2s ease-in;
  font-size: 30px;
  line-height: 18px;
  background-color: transparent;
  background-image: url(\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E\\");
  background-repeat: no-repeat;
  background-size: 40px 40px;
  background-position: 95% center;

  border-radius: 50px;
  border: 1px solid #575756;
",
                                                                        "

&::placeholder {
  color: rgba(255, 255, 255, 0.75);
}
  width: 95%;
  padding: 12px 24px;
  margin-bottom: 1%;

  font-size: 14px;
  line-height: 18px;
  font-color: white;

  color: white;
  background-size: 18px 18px;
  background-position: 95% center;
  border: 1px solid white;

  box-shadow: 0px 0px;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "Styled(styled.input)",
                                                                    "foldedComponentIds": Array [
                                                                      "sc-kAzzGY",
                                                                    ],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-kpOJdX",
                                                                    "target": "input",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={
                                                                  Object {
                                                                    "current": <input
                                                                      class="sc-kAzzGY sc-kpOJdX cgQYTz"
                                                                      placeholder="Search for a course..."
                                                                    />,
                                                                  }
                                                                }
                                                                onChange={[Function]}
                                                                placeholder="Search for a course..."
                                                              >
                                                                <input
                                                                  className="sc-kAzzGY sc-kpOJdX cgQYTz"
                                                                  onChange={[Function]}
                                                                  placeholder="Search for a course..."
                                                                />
                                                              </StyledComponent>
                                                            </Styled(styled.input)>
                                                          </form>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </SearchCourses>
                                                </div>
                                              </CardBody>
                                            </Transition>
                                          </Collapse>
                                        </div>
                                      </Card>
                                    </StyledComponent>
                                  </Styled(Card)>
                                  <Styled(Card)
                                    bg="dark"
                                    text="white"
                                  >
                                    <StyledComponent
                                      bg="dark"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "Body": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardBody",
                                            "render": [Function],
                                          },
                                          "Footer": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardFooter",
                                            "render": [Function],
                                          },
                                          "Header": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardHeader",
                                            "render": [Function],
                                          },
                                          "Img": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": Object {
                                              "variant": null,
                                            },
                                            "displayName": "CardImg",
                                            "render": [Function],
                                          },
                                          "ImgOverlay": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardImgOverlay",
                                            "render": [Function],
                                          },
                                          "Link": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardLink",
                                            "render": [Function],
                                          },
                                          "Subtitle": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardSubtitle",
                                            "render": [Function],
                                          },
                                          "Text": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardText",
                                            "render": [Function],
                                          },
                                          "Title": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardTitle",
                                            "render": [Function],
                                          },
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kkGfuU",
                                            "isStatic": false,
                                            "lastClassName": "kUNnRZ",
                                            "rules": Array [
                                              "
",
                                            ],
                                          },
                                          "displayName": "Styled(Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kkGfuU",
                                          "target": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Body": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardBody",
                                              "render": [Function],
                                            },
                                            "Footer": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardFooter",
                                              "render": [Function],
                                            },
                                            "Header": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardHeader",
                                              "render": [Function],
                                            },
                                            "Img": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": Object {
                                                "variant": null,
                                              },
                                              "displayName": "CardImg",
                                              "render": [Function],
                                            },
                                            "ImgOverlay": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardImgOverlay",
                                              "render": [Function],
                                            },
                                            "Link": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardLink",
                                              "render": [Function],
                                            },
                                            "Subtitle": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardSubtitle",
                                              "render": [Function],
                                            },
                                            "Text": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardText",
                                              "render": [Function],
                                            },
                                            "Title": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardTitle",
                                              "render": [Function],
                                            },
                                            "defaultProps": Object {
                                              "body": false,
                                            },
                                            "displayName": "Card",
                                            "render": [Function],
                                          },
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="white"
                                    >
                                      <Card
                                        bg="dark"
                                        body={false}
                                        className="sc-kkGfuU kUNnRZ"
                                        text="white"
                                      >
                                        <div
                                          className="sc-kkGfuU kUNnRZ card bg-dark text-white"
                                        >
                                          <Styled(CardHeader)
                                            aria-controls="collapse-requirements"
                                            aria-expanded={true}
                                            onClick={[Function]}
                                          >
                                            <StyledComponent
                                              aria-controls="collapse-requirements"
                                              aria-expanded={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-iAyFgw",
                                                    "isStatic": false,
                                                    "lastClassName": "kQfvWD",
                                                    "rules": Array [
                                                      "
  transition: color 0.2s ease;
  color: rgba(255, 255, 255, 0.75);
  display: flex;
  align-items: center

  &:hover {
    color: rgba(255, 255, 255, 1)
  };

",
                                                    ],
                                                  },
                                                  "displayName": "Styled(CardHeader)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-iAyFgw",
                                                  "target": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": undefined,
                                                    "displayName": "CardHeader",
                                                    "render": [Function],
                                                  },
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                            >
                                              <CardHeader
                                                aria-controls="collapse-requirements"
                                                aria-expanded={true}
                                                className="sc-iAyFgw kQfvWD"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-controls="collapse-requirements"
                                                  aria-expanded={true}
                                                  className="sc-iAyFgw kQfvWD card-header"
                                                  onClick={[Function]}
                                                >
                                                  <styled.i
                                                    className="fa fa-chevron-down"
                                                  >
                                                    <StyledComponent
                                                      className="fa fa-chevron-down"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hSdWYo",
                                                            "isStatic": false,
                                                            "lastClassName": "ifQXLO",
                                                            "rules": Array [
                                                              "
  float: left;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.i",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hSdWYo",
                                                          "target": "i",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <i
                                                        className="sc-hSdWYo ifQXLO fa fa-chevron-down"
                                                      />
                                                    </StyledComponent>
                                                  </styled.i>
                                                  <styled.h5>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hMqMXs",
                                                            "isStatic": false,
                                                            "lastClassName": "igQMIg",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  text-align: center;
  width: 100%;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.h5",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hMqMXs",
                                                          "target": "h5",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <h5
                                                        className="sc-hMqMXs igQMIg"
                                                      >
                                                        Requirements
                                                      </h5>
                                                    </StyledComponent>
                                                  </styled.h5>
                                                </div>
                                              </CardHeader>
                                            </StyledComponent>
                                          </Styled(CardHeader)>
                                          <Collapse
                                            appear={false}
                                            dimension="height"
                                            getDimensionValue={[Function]}
                                            in={true}
                                            mountOnEnter={false}
                                            timeout={300}
                                            unmountOnExit={false}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              aria-expanded={null}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={300}
                                              unmountOnExit={false}
                                            >
                                              <CardBody
                                                aria-expanded={null}
                                                className="collapse show"
                                              >
                                                <div
                                                  aria-expanded={null}
                                                  className="collapse show card-body"
                                                >
                                                  <styled.div>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-kEYyzF",
                                                            "isStatic": false,
                                                            "lastClassName": "eFkzlT",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  margin-bottom: 4px;
  font-family: inherit;
  text-align: left;
  color: inherit;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.div",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-kEYyzF",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="sc-kEYyzF eFkzlT"
                                                      >
                                                        <Requirements
                                                          degree_reqs={
                                                            Array [
                                                              Object {
                                                                "filter_type": "Required courses",
                                                                "info": "COMP3900",
                                                                "units": 6,
                                                              },
                                                              Object {
                                                                "filter_type": "Courses with options",
                                                                "info": "[ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]",
                                                                "units": 30,
                                                              },
                                                              Object {
                                                                "filter_type": "General education",
                                                                "info": "Any general education course",
                                                                "units": 12,
                                                              },
                                                              Object {
                                                                "filter_type": "Free electives",
                                                                "info": "Any free elective",
                                                                "units": 36,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <div>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Required courses
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        6 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                COMP3900
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Courses with options
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        30 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                [ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        General education
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        12 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                Any general education course
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Free electives
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        36 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                Any free elective
                                                              </li>
                                                            </ul>
                                                          </div>
                                                        </Requirements>
                                                      </div>
                                                    </StyledComponent>
                                                  </styled.div>
                                                </div>
                                              </CardBody>
                                            </Transition>
                                          </Collapse>
                                        </div>
                                      </Card>
                                    </StyledComponent>
                                  </Styled(Card)>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </InfoBar>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </Provider>
              </App>
            </ErrorBoundary>
          </DragDropContext>
        </div>
      </StyledComponent>
    </styled.div>
  </div>
</Timeline>
`;

exports[`Render degree planning timeline view adds a course to the Add box after search 1`] = `
<Timeline
  match={
    Object {
      "params": Object {
        "degree": "degree",
      },
    }
  }
>
  <div>
    <Navbar
      bg="dark"
      collapseOnSelect={false}
      expand={true}
      id="navbar"
      variant="dark"
    >
      <nav
        className="navbar navbar-expand navbar-dark bg-dark"
        id="navbar"
      >
        <NavbarBrand
          href="/"
        >
          <a
            className="navbar-brand"
            href="/"
          >
            OnCourse
          </a>
        </NavbarBrand>
        <Nav
          className="mr-auto"
          fill={false}
          justify={false}
        >
          <ForwardRef
            as="div"
            className="mr-auto navbar-nav"
            onSelect={[Function]}
          >
            <div
              className="mr-auto navbar-nav"
              onKeyDown={[Function]}
            />
          </ForwardRef>
        </Nav>
        <Styled(Button)
          id="save"
          onClick={[Function]}
          variant="outline-info"
        >
          <Button
            active={false}
            className="sc-kGXeez kEgkzh"
            disabled={false}
            id="save"
            onClick={[Function]}
            type="button"
            variant="outline-info"
          >
            <button
              className="sc-kGXeez kEgkzh btn btn-outline-info"
              disabled={false}
              id="save"
              onClick={[Function]}
              type="button"
            >
              <i
                className="fa fa-save"
              />
            </button>
          </Button>
        </Styled(Button)>
        <Styled(Button)
          variant="outline-info"
        >
          <Button
            active={false}
            className="sc-kGXeez kEgkzh"
            disabled={false}
            type="button"
            variant="outline-info"
          >
            <button
              className="sc-kGXeez kEgkzh btn btn-outline-info"
              disabled={false}
              type="button"
            >
              <i
                className="fa fa-cog"
              />
            </button>
          </Button>
        </Styled(Button)>
      </nav>
    </Navbar>
    <br />
    <styled.div>
      <div
        className="sc-cSHVUG jTfjLr"
      >
        <DragDropContext
          onDragEnd={[Function]}
          onDragStart={[Function]}
        >
          <ErrorBoundary>
            <App
              contextId="1"
              liftInstruction="Draggable item. Ensure your screen reader is not in browse mode and then press space bar to lift."
              onDragEnd={[Function]}
              onDragStart={[Function]}
              setCallbacks={[Function]}
            >
              <Provider
                context={
                  Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": null,
                    "_currentValue2": null,
                    "_threadCount": 0,
                  }
                }
                store={
                  Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  }
                }
              >
                <div>
                  <styled.div>
                    <div
                      className="sc-chPdSV jPXevF"
                    >
                      <div
                        id="timeline"
                      >
                        <div
                          key="2019"
                        >
                          <styled.div
                            key="2019"
                          >
                            <div
                              className="sc-kAzzGY bOfWLD"
                            >
                              <Term
                                courses={
                                  Array [
                                    Object {
                                      "code": "MATH1131",
                                      "coreqs": "",
                                      "equivalents": "DPST1013",
                                      "exclusions": "(DPST1013 AND ECON1202 AND ECON2291 AND MATH1011 AND MATH1031 AND MATH1141 AND MATH1151)",
                                      "name": "Mathematics 1A",
                                      "prereqs": "",
                                      "terms": Array [
                                        Object {
                                          "term": 1,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                    Object {
                                      "code": "MATH1081",
                                      "coreqs": "(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)",
                                      "equivalents": "",
                                      "exclusions": "MATH1090",
                                      "name": "Discrete Mathematics",
                                      "prereqs": "",
                                      "terms": Array [
                                        Object {
                                          "term": 1,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                  ]
                                }
                                key="1 2019"
                                removeCourse={[Function]}
                                termId="1 2019"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T1 2019
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="1 2019"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="1 2019"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="1 2019"
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="1 2019"
                                          >
                                            <Course
                                              code="MATH1131"
                                              coreqs=""
                                              equivalents="DPST1013"
                                              exclusions="(DPST1013 AND ECON1202 AND ECON2291 AND MATH1011 AND MATH1031 AND MATH1141 AND MATH1151)"
                                              index={0}
                                              key="MATH1131"
                                              name="Mathematics 1A"
                                              prereqs=""
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="MATH1131"
                                                  index={0}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="MATH1131"
                                                    index={0}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="MATH1131"
                                                      index={0}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="MATH1131"
                                                        dropAnimationFinished={[Function]}
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="MATH1131"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="MATH1131"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="MATH1131"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="MATH1131"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            MATH1131
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="MATH1131"
                                                  coreqs=""
                                                  equivalents="DPST1013"
                                                  exclusions="(DPST1013 AND ECON1202 AND ECON2291 AND MATH1011 AND MATH1031 AND MATH1141 AND MATH1151)"
                                                  index={0}
                                                  name="Mathematics 1A"
                                                  onHide={[Function]}
                                                  prereqs=""
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="MATH1131"
                                                    coreqs=""
                                                    equivalents="DPST1013"
                                                    exclusions="(DPST1013 AND ECON1202 AND ECON2291 AND MATH1011 AND MATH1031 AND MATH1141 AND MATH1151)"
                                                    index={0}
                                                    name="Mathematics 1A"
                                                    onHide={[Function]}
                                                    prereqs=""
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="MATH1131"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents="DPST1013"
                                                      exclusions="(DPST1013 AND ECON1202 AND ECON2291 AND MATH1011 AND MATH1031 AND MATH1141 AND MATH1151)"
                                                      index={0}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Mathematics 1A"
                                                      onHide={[Function]}
                                                      prereqs=""
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <Course
                                              code="MATH1081"
                                              coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                              equivalents=""
                                              exclusions="MATH1090"
                                              index={1}
                                              key="MATH1081"
                                              name="Discrete Mathematics"
                                              prereqs=""
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="MATH1081"
                                                  index={1}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="MATH1081"
                                                    index={1}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="MATH1081"
                                                      index={1}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="MATH1081"
                                                        dropAnimationFinished={[Function]}
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="MATH1081"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="MATH1081"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="MATH1081"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="MATH1081"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            MATH1081
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="MATH1081"
                                                  coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                  equivalents=""
                                                  exclusions="MATH1090"
                                                  index={1}
                                                  name="Discrete Mathematics"
                                                  onHide={[Function]}
                                                  prereqs=""
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="MATH1081"
                                                    coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                    equivalents=""
                                                    exclusions="MATH1090"
                                                    index={1}
                                                    name="Discrete Mathematics"
                                                    onHide={[Function]}
                                                    prereqs=""
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="MATH1081"
                                                      coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="MATH1090"
                                                      index={1}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Discrete Mathematics"
                                                      onHide={[Function]}
                                                      prereqs=""
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={
                                  Array [
                                    Object {
                                      "code": "COMP1521",
                                      "coreqs": "",
                                      "equivalents": "",
                                      "exclusions": "DPST1092",
                                      "name": "Computer Systems Fundamentals",
                                      "prereqs": "(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)",
                                      "terms": Array [
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                    Object {
                                      "code": "MATH1231",
                                      "coreqs": "",
                                      "equivalents": "DPST1014",
                                      "exclusions": "(DPST1014 AND MATH1021 AND MATH1241 AND MATH1251)",
                                      "name": "Mathematics 1B",
                                      "prereqs": "(DPST1013 OR MATH1131 OR MATH1141)",
                                      "terms": Array [
                                        Object {
                                          "term": 1,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                  ]
                                }
                                key="2 2019"
                                removeCourse={[Function]}
                                termId="2 2019"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T2 2019
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="2 2019"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="2 2019"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="2 2019"
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="2 2019"
                                          >
                                            <Course
                                              code="COMP1521"
                                              coreqs=""
                                              equivalents=""
                                              exclusions="DPST1092"
                                              index={0}
                                              key="COMP1521"
                                              name="Computer Systems Fundamentals"
                                              prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP1521"
                                                  index={0}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP1521"
                                                    index={0}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP1521"
                                                      index={0}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP1521"
                                                        dropAnimationFinished={[Function]}
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP1521"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP1521"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP1521"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP1521"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP1521
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP1521"
                                                  coreqs=""
                                                  equivalents=""
                                                  exclusions="DPST1092"
                                                  index={0}
                                                  name="Computer Systems Fundamentals"
                                                  onHide={[Function]}
                                                  prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP1521"
                                                    coreqs=""
                                                    equivalents=""
                                                    exclusions="DPST1092"
                                                    index={0}
                                                    name="Computer Systems Fundamentals"
                                                    onHide={[Function]}
                                                    prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP1521"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="DPST1092"
                                                      index={0}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Computer Systems Fundamentals"
                                                      onHide={[Function]}
                                                      prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <Course
                                              code="MATH1231"
                                              coreqs=""
                                              equivalents="DPST1014"
                                              exclusions="(DPST1014 AND MATH1021 AND MATH1241 AND MATH1251)"
                                              index={1}
                                              key="MATH1231"
                                              name="Mathematics 1B"
                                              prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="MATH1231"
                                                  index={1}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="MATH1231"
                                                    index={1}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="MATH1231"
                                                      index={1}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="MATH1231"
                                                        dropAnimationFinished={[Function]}
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="MATH1231"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="MATH1231"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="MATH1231"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="MATH1231"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            MATH1231
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="MATH1231"
                                                  coreqs=""
                                                  equivalents="DPST1014"
                                                  exclusions="(DPST1014 AND MATH1021 AND MATH1241 AND MATH1251)"
                                                  index={1}
                                                  name="Mathematics 1B"
                                                  onHide={[Function]}
                                                  prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="MATH1231"
                                                    coreqs=""
                                                    equivalents="DPST1014"
                                                    exclusions="(DPST1014 AND MATH1021 AND MATH1241 AND MATH1251)"
                                                    index={1}
                                                    name="Mathematics 1B"
                                                    onHide={[Function]}
                                                    prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="MATH1231"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents="DPST1014"
                                                      exclusions="(DPST1014 AND MATH1021 AND MATH1241 AND MATH1251)"
                                                      index={1}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Mathematics 1B"
                                                      onHide={[Function]}
                                                      prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={
                                  Array [
                                    Object {
                                      "code": "COMP1531",
                                      "coreqs": "",
                                      "equivalents": "",
                                      "exclusions": "(SENG1020 AND SENG1031 AND SENG1010)",
                                      "name": "Software Engineering Fundamentals",
                                      "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                      "terms": Array [
                                        Object {
                                          "term": 1,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                    Object {
                                      "code": "COMP2521",
                                      "coreqs": "",
                                      "equivalents": "",
                                      "exclusions": "COMP1927",
                                      "name": "Data Structures and Algorithms",
                                      "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                      "terms": Array [
                                        Object {
                                          "term": 1,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 1,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                  ]
                                }
                                key="3 2019"
                                removeCourse={[Function]}
                                termId="3 2019"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T3 2019
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="3 2019"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="3 2019"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="3 2019"
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="3 2019"
                                          >
                                            <Course
                                              code="COMP1531"
                                              coreqs=""
                                              equivalents=""
                                              exclusions="(SENG1020 AND SENG1031 AND SENG1010)"
                                              index={0}
                                              key="COMP1531"
                                              name="Software Engineering Fundamentals"
                                              prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP1531"
                                                  index={0}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP1531"
                                                    index={0}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP1531"
                                                      index={0}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP1531"
                                                        dropAnimationFinished={[Function]}
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP1531"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP1531"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP1531"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP1531"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP1531
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP1531"
                                                  coreqs=""
                                                  equivalents=""
                                                  exclusions="(SENG1020 AND SENG1031 AND SENG1010)"
                                                  index={0}
                                                  name="Software Engineering Fundamentals"
                                                  onHide={[Function]}
                                                  prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP1531"
                                                    coreqs=""
                                                    equivalents=""
                                                    exclusions="(SENG1020 AND SENG1031 AND SENG1010)"
                                                    index={0}
                                                    name="Software Engineering Fundamentals"
                                                    onHide={[Function]}
                                                    prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP1531"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="(SENG1020 AND SENG1031 AND SENG1010)"
                                                      index={0}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Software Engineering Fundamentals"
                                                      onHide={[Function]}
                                                      prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <Course
                                              code="COMP2521"
                                              coreqs=""
                                              equivalents=""
                                              exclusions="COMP1927"
                                              index={1}
                                              key="COMP2521"
                                              name="Data Structures and Algorithms"
                                              prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP2521"
                                                  index={1}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP2521"
                                                    index={1}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP2521"
                                                      index={1}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP2521"
                                                        dropAnimationFinished={[Function]}
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP2521"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP2521"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP2521"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP2521"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP2521
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP2521"
                                                  coreqs=""
                                                  equivalents=""
                                                  exclusions="COMP1927"
                                                  index={1}
                                                  name="Data Structures and Algorithms"
                                                  onHide={[Function]}
                                                  prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP2521"
                                                    coreqs=""
                                                    equivalents=""
                                                    exclusions="COMP1927"
                                                    index={1}
                                                    name="Data Structures and Algorithms"
                                                    onHide={[Function]}
                                                    prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP2521"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="COMP1927"
                                                      index={1}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Data Structures and Algorithms"
                                                      onHide={[Function]}
                                                      prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                            </div>
                          </styled.div>
                        </div>
                        <div
                          key="2020"
                        >
                          <styled.div
                            key="2020"
                          >
                            <div
                              className="sc-kAzzGY bOfWLD"
                            >
                              <Term
                                courses={Array []}
                                highlight={false}
                                key="1 2020"
                                removeCourse={[Function]}
                                termId="1 2020"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T1 2020
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="1 2020"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="1 2020"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="1 2020"
                                          highlight={false}
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="1 2020"
                                          >
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={
                                  Array [
                                    Object {
                                      "code": "COMP3121",
                                      "coreqs": "",
                                      "equivalents": "COMP3821
COMP9801
COMP3120
COMP9101",
                                      "exclusions": "",
                                      "name": "Algorithms and Programming Techniques",
                                      "prereqs": "(COMP1927 OR COMP2521)",
                                      "terms": Array [
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                    Object {
                                      "code": "COMP2511",
                                      "coreqs": "",
                                      "equivalents": "",
                                      "exclusions": "(COMP2011 AND COMP2911)",
                                      "name": "Object-Oriented Design & Programming",
                                      "prereqs": "COMP1531
(COMP1927 OR COMP2521)",
                                      "terms": Array [
                                        Object {
                                          "term": 2,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2019,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2020,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2021,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2022,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2023,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2024,
                                        },
                                        Object {
                                          "term": 2,
                                          "year": 2025,
                                        },
                                        Object {
                                          "term": 3,
                                          "year": 2025,
                                        },
                                      ],
                                      "units": 6,
                                    },
                                  ]
                                }
                                key="2 2020"
                                removeCourse={[Function]}
                                termId="2 2020"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T2 2020
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="2 2020"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="2 2020"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="2 2020"
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="2 2020"
                                          >
                                            <Course
                                              code="COMP3121"
                                              coreqs=""
                                              equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                              exclusions=""
                                              index={0}
                                              key="COMP3121"
                                              name="Algorithms and Programming Techniques"
                                              prereqs="(COMP1927 OR COMP2521)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP3121"
                                                  index={0}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP3121"
                                                    index={0}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP3121"
                                                      index={0}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP3121"
                                                        dropAnimationFinished={[Function]}
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP3121"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP3121"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP3121"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP3121"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP3121
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP3121"
                                                  coreqs=""
                                                  equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                  exclusions=""
                                                  index={0}
                                                  name="Algorithms and Programming Techniques"
                                                  onHide={[Function]}
                                                  prereqs="(COMP1927 OR COMP2521)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP3121"
                                                    coreqs=""
                                                    equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                    exclusions=""
                                                    index={0}
                                                    name="Algorithms and Programming Techniques"
                                                    onHide={[Function]}
                                                    prereqs="(COMP1927 OR COMP2521)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP3121"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                      exclusions=""
                                                      index={0}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Algorithms and Programming Techniques"
                                                      onHide={[Function]}
                                                      prereqs="(COMP1927 OR COMP2521)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <Course
                                              code="COMP2511"
                                              coreqs=""
                                              equivalents=""
                                              exclusions="(COMP2011 AND COMP2911)"
                                              index={1}
                                              key="COMP2511"
                                              name="Object-Oriented Design & Programming"
                                              prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP2511"
                                                  index={1}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP2511"
                                                    index={1}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP2511"
                                                      index={1}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP2511"
                                                        dropAnimationFinished={[Function]}
                                                        index={1}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP2511"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP2511"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP2511"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP2511"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP2511
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP2511"
                                                  coreqs=""
                                                  equivalents=""
                                                  exclusions="(COMP2011 AND COMP2911)"
                                                  index={1}
                                                  name="Object-Oriented Design & Programming"
                                                  onHide={[Function]}
                                                  prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP2511"
                                                    coreqs=""
                                                    equivalents=""
                                                    exclusions="(COMP2011 AND COMP2911)"
                                                    index={1}
                                                    name="Object-Oriented Design & Programming"
                                                    onHide={[Function]}
                                                    prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP2511"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="(COMP2011 AND COMP2911)"
                                                      index={1}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Object-Oriented Design & Programming"
                                                      onHide={[Function]}
                                                      prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={Array []}
                                highlight={false}
                                key="3 2020"
                                removeCourse={[Function]}
                                termId="3 2020"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T3 2020
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="3 2020"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="3 2020"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="3 2020"
                                          highlight={false}
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="3 2020"
                                          >
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                            </div>
                          </styled.div>
                        </div>
                        <div
                          key="2021"
                        >
                          <styled.div
                            key="2021"
                          >
                            <div
                              className="sc-kAzzGY bOfWLD"
                            >
                              <Term
                                courses={Array []}
                                highlight={false}
                                key="1 2021"
                                removeCourse={[Function]}
                                termId="1 2021"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T1 2021
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="1 2021"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="1 2021"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="1 2021"
                                          highlight={false}
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="1 2021"
                                          >
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={Array []}
                                highlight={false}
                                key="2 2021"
                                removeCourse={[Function]}
                                termId="2 2021"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T2 2021
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="2 2021"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="2 2021"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="2 2021"
                                          highlight={false}
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="2 2021"
                                          >
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                              <Term
                                courses={Array []}
                                highlight={false}
                                key="3 2021"
                                removeCourse={[Function]}
                                termId="3 2021"
                              >
                                <styled.div>
                                  <div
                                    className="sc-bwzfXH itFJcJ"
                                  >
                                    <styled.h3>
                                      <h3
                                        className="sc-htpNat jumdkD"
                                      >
                                        T3 2021
                                      </h3>
                                    </styled.h3>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="3 2021"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="3 2021"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="3 2021"
                                          highlight={false}
                                          innerRef={[Function]}
                                          isDraggingOver={false}
                                        >
                                          <div
                                            className="sc-bxivhb hYJMoY"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="3 2021"
                                          >
                                            <AnimateInOut
                                              on={null}
                                              shouldAnimate={false}
                                            />
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </Term>
                            </div>
                          </styled.div>
                        </div>
                      </div>
                      <Styled(Button)
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          className="sc-kpOJdX bsCxnj"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                          variant="primary"
                        >
                          <button
                            className="sc-kpOJdX bsCxnj btn btn-primary"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            ++
                          </button>
                        </Button>
                      </Styled(Button)>
                      <Styled(Button)
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          className="sc-kpOJdX bsCxnj"
                          disabled={false}
                          onClick={[Function]}
                          type="button"
                          variant="primary"
                        >
                          <button
                            className="sc-kpOJdX bsCxnj btn btn-primary"
                            disabled={false}
                            onClick={[Function]}
                            type="button"
                          >
                            --
                          </button>
                        </Button>
                      </Styled(Button)>
                    </div>
                  </styled.div>
                  <styled.div>
                    <div
                      className="sc-kgoBCf gsifCj"
                    >
                      <InfoBar
                        add_course={
                          Object {
                            "code": "COMP1511",
                            "coreqs": "",
                            "equivalents": "",
                            "exclusions": "DPST1091",
                            "name": "Programming Fundamentals",
                            "prereqs": "",
                            "terms": Array [
                              Object {
                                "term": 1,
                                "year": 2019,
                              },
                              Object {
                                "term": 2,
                                "year": 2019,
                              },
                              Object {
                                "term": 3,
                                "year": 2019,
                              },
                              Object {
                                "term": 1,
                                "year": 2020,
                              },
                              Object {
                                "term": 2,
                                "year": 2020,
                              },
                              Object {
                                "term": 3,
                                "year": 2020,
                              },
                              Object {
                                "term": 1,
                                "year": 2021,
                              },
                              Object {
                                "term": 2,
                                "year": 2021,
                              },
                              Object {
                                "term": 3,
                                "year": 2021,
                              },
                              Object {
                                "term": 1,
                                "year": 2022,
                              },
                              Object {
                                "term": 2,
                                "year": 2022,
                              },
                              Object {
                                "term": 3,
                                "year": 2022,
                              },
                              Object {
                                "term": 1,
                                "year": 2023,
                              },
                              Object {
                                "term": 2,
                                "year": 2023,
                              },
                              Object {
                                "term": 3,
                                "year": 2023,
                              },
                              Object {
                                "term": 1,
                                "year": 2024,
                              },
                              Object {
                                "term": 2,
                                "year": 2024,
                              },
                              Object {
                                "term": 3,
                                "year": 2024,
                              },
                              Object {
                                "term": 1,
                                "year": 2025,
                              },
                              Object {
                                "term": 2,
                                "year": 2025,
                              },
                              Object {
                                "term": 3,
                                "year": 2025,
                              },
                            ],
                            "units": 6,
                          }
                        }
                        add_event={[Function]}
                        degree_id="3778"
                        degree_name="Computer Science"
                        degree_reqs={
                          Array [
                            Object {
                              "filter_type": "GenEd",
                              "units": 12,
                            },
                            Object {
                              "filter_type": "FreeElective",
                              "units": 36,
                            },
                          ]
                        }
                        remove_course={[Function]}
                      >
                        <styled.div>
                          <div
                            className="sc-VigVT hlJAzr"
                          >
                            <header>
                              <styled.h3>
                                <h3
                                  className="sc-jTzLTM fvKxmO"
                                >
                                  Computer Science
                                  <br />
                                  <br />
                                  3778
                                </h3>
                              </styled.h3>
                            </header>
                            <body>
                              <styled.h5>
                                <h5
                                  className="sc-fjdhpX ptahi"
                                >
                                  Requirements
                                </h5>
                              </styled.h5>
                              <styled.div>
                                <div
                                  className="sc-jzJRlG jwkTdo"
                                >
                                  <div>
                                    <p>
                                      GenEd: 12 UOC of
                                    </p>
                                    <ul>
                                      <li>
                                        undefined
                                      </li>
                                    </ul>
                                  </div>
                                  <div>
                                    <p>
                                      FreeElective: 36 UOC of
                                    </p>
                                    <ul>
                                      <li>
                                        undefined
                                      </li>
                                    </ul>
                                  </div>
                                </div>
                              </styled.div>
                              <styled.h5>
                                <h5
                                  className="sc-fjdhpX ptahi"
                                >
                                  Add a Course
                                </h5>
                              </styled.h5>
                              <p>
                                Search for a course and click on it. Then drag the course into your timeline from the 
                                <b>
                                  Add
                                </b>
                                 box.
                              </p>
                              <CourseDropBox
                                add_course={
                                  Object {
                                    "code": "COMP1511",
                                    "coreqs": "",
                                    "equivalents": "",
                                    "exclusions": "DPST1091",
                                    "name": "Programming Fundamentals",
                                    "prereqs": "",
                                    "terms": Array [
                                      Object {
                                        "term": 1,
                                        "year": 2019,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2019,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2019,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2020,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2020,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2020,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2021,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2021,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2021,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2022,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2022,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2022,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2023,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2023,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2023,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2024,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2024,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2024,
                                      },
                                      Object {
                                        "term": 1,
                                        "year": 2025,
                                      },
                                      Object {
                                        "term": 2,
                                        "year": 2025,
                                      },
                                      Object {
                                        "term": 3,
                                        "year": 2025,
                                      },
                                    ],
                                    "units": 6,
                                  }
                                }
                                remove_course={[Function]}
                                type="Add"
                              >
                                <styled.div>
                                  <div
                                    className="sc-ifAKCX ekqPLx"
                                  >
                                    <styled.h5>
                                      <h5
                                        className="sc-EHOje lWPgP"
                                      >
                                        Add
                                      </h5>
                                    </styled.h5>
                                    <ConnectFunction
                                      direction="vertical"
                                      droppableId="Add"
                                      getContainerForClone={[Function]}
                                      ignoreContainerClipping={false}
                                      isCombineEnabled={false}
                                      isDropDisabled={false}
                                      mode="standard"
                                      renderClone={null}
                                      type="DEFAULT"
                                    >
                                      <Droppable
                                        direction="vertical"
                                        droppableId="Add"
                                        getContainerForClone={[Function]}
                                        ignoreContainerClipping={false}
                                        isCombineEnabled={false}
                                        isDropDisabled={false}
                                        mode="standard"
                                        placeholder={null}
                                        renderClone={null}
                                        shouldAnimatePlaceholder={false}
                                        snapshot={
                                          Object {
                                            "draggingFromThisWith": null,
                                            "draggingOverWith": null,
                                            "isDraggingOver": false,
                                            "isUsingPlaceholder": false,
                                          }
                                        }
                                        type="DEFAULT"
                                        updateViewportMaxScroll={[Function]}
                                        useClone={null}
                                      >
                                        <styled.div
                                          data-rbd-droppable-context-id="1"
                                          data-rbd-droppable-id="Add"
                                          innerRef={[Function]}
                                        >
                                          <div
                                            className="sc-bZQynM eDSsSi"
                                            data-rbd-droppable-context-id="1"
                                            data-rbd-droppable-id="Add"
                                          >
                                            <Course
                                              code="COMP1511"
                                              coreqs=""
                                              equivalents=""
                                              exclusions="DPST1091"
                                              index={0}
                                              key="COMP1511"
                                              name="Programming Fundamentals"
                                              prereqs=""
                                              removeCourse={[Function]}
                                              terms={
                                                Array [
                                                  Object {
                                                    "term": 1,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2019,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2020,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2021,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2022,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2023,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2024,
                                                  },
                                                  Object {
                                                    "term": 1,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 2,
                                                    "year": 2025,
                                                  },
                                                  Object {
                                                    "term": 3,
                                                    "year": 2025,
                                                  },
                                                ]
                                              }
                                              units={6}
                                            >
                                              <div>
                                                <PublicDraggable
                                                  draggableId="COMP1511"
                                                  index={0}
                                                >
                                                  <PrivateDraggable
                                                    canDragInteractiveElements={false}
                                                    draggableId="COMP1511"
                                                    index={0}
                                                    isClone={false}
                                                    isEnabled={true}
                                                    shouldRespectForcePress={false}
                                                  >
                                                    <Connect(Draggable)
                                                      canDragInteractiveElements={false}
                                                      draggableId="COMP1511"
                                                      index={0}
                                                      isClone={false}
                                                      isEnabled={true}
                                                      shouldRespectForcePress={false}
                                                    >
                                                      <Draggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="COMP1511"
                                                        dropAnimationFinished={[Function]}
                                                        index={0}
                                                        isClone={false}
                                                        isEnabled={true}
                                                        mapped={
                                                          Object {
                                                            "combineTargetFor": null,
                                                            "offset": Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            },
                                                            "shouldAnimateDisplacement": true,
                                                            "snapshot": Object {
                                                              "combineTargetFor": null,
                                                              "combineWith": null,
                                                              "draggingOver": null,
                                                              "dropAnimation": null,
                                                              "isClone": false,
                                                              "isDragging": false,
                                                              "isDropAnimating": false,
                                                              "mode": null,
                                                            },
                                                            "type": "SECONDARY",
                                                          }
                                                        }
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <styled.div
                                                          aria-labelledby="rbd-lift-instruction-1"
                                                          data-rbd-drag-handle-context-id="1"
                                                          data-rbd-drag-handle-draggable-id="COMP1511"
                                                          data-rbd-draggable-context-id="1"
                                                          data-rbd-draggable-id="COMP1511"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          isDragging={false}
                                                          onClick={[Function]}
                                                          onDragStart={[Function]}
                                                          onTransitionEnd={null}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-labelledby="rbd-lift-instruction-1"
                                                            className="sc-bdVaJa feQPoh"
                                                            data-rbd-drag-handle-context-id="1"
                                                            data-rbd-drag-handle-draggable-id="COMP1511"
                                                            data-rbd-draggable-context-id="1"
                                                            data-rbd-draggable-id="COMP1511"
                                                            draggable={false}
                                                            onClick={[Function]}
                                                            onDragStart={[Function]}
                                                            onTransitionEnd={null}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            COMP1511
                                                          </div>
                                                        </styled.div>
                                                      </Draggable>
                                                    </Connect(Draggable)>
                                                  </PrivateDraggable>
                                                </PublicDraggable>
                                                <CourseInfoModal
                                                  code="COMP1511"
                                                  coreqs=""
                                                  equivalents=""
                                                  exclusions="DPST1091"
                                                  index={0}
                                                  name="Programming Fundamentals"
                                                  onHide={[Function]}
                                                  prereqs=""
                                                  removeCourse={[Function]}
                                                  show={false}
                                                  terms={
                                                    Array [
                                                      Object {
                                                        "term": 1,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2019,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2020,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2021,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2022,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2023,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2024,
                                                      },
                                                      Object {
                                                        "term": 1,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 2,
                                                        "year": 2025,
                                                      },
                                                      Object {
                                                        "term": 3,
                                                        "year": 2025,
                                                      },
                                                    ]
                                                  }
                                                  units={6}
                                                >
                                                  <Bootstrap(Modal)
                                                    aria-labelledby="contained-modal-title-vcenter"
                                                    centered={true}
                                                    code="COMP1511"
                                                    coreqs=""
                                                    equivalents=""
                                                    exclusions="DPST1091"
                                                    index={0}
                                                    name="Programming Fundamentals"
                                                    onHide={[Function]}
                                                    prereqs=""
                                                    removeCourse={[Function]}
                                                    show={false}
                                                    size="lg"
                                                    terms={
                                                      Array [
                                                        Object {
                                                          "term": 1,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2019,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2020,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2021,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2022,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2023,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2024,
                                                        },
                                                        Object {
                                                          "term": 1,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 2,
                                                          "year": 2025,
                                                        },
                                                        Object {
                                                          "term": 3,
                                                          "year": 2025,
                                                        },
                                                      ]
                                                    }
                                                    units={6}
                                                  >
                                                    <Modal
                                                      animation={true}
                                                      aria-labelledby="contained-modal-title-vcenter"
                                                      autoFocus={true}
                                                      backdrop={true}
                                                      bsPrefix="modal"
                                                      centered={true}
                                                      code="COMP1511"
                                                      coreqs=""
                                                      dialogAs={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "displayName": "ModalDialog",
                                                          "render": [Function],
                                                        }
                                                      }
                                                      enforceFocus={true}
                                                      equivalents=""
                                                      exclusions="DPST1091"
                                                      index={0}
                                                      keyboard={true}
                                                      manager={
                                                        BootstrapModalManager {
                                                          "adjustAndStore": [Function],
                                                          "containers": Array [],
                                                          "data": Array [],
                                                          "handleContainerOverflow": true,
                                                          "hideSiblingNodes": true,
                                                          "modals": Array [],
                                                          "restore": [Function],
                                                          "scrollbarSize": 0,
                                                        }
                                                      }
                                                      name="Programming Fundamentals"
                                                      onHide={[Function]}
                                                      prereqs=""
                                                      removeCourse={[Function]}
                                                      restoreFocus={true}
                                                      show={false}
                                                      size="lg"
                                                      terms={
                                                        Array [
                                                          Object {
                                                            "term": 1,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2019,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2020,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2021,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2022,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2023,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2024,
                                                          },
                                                          Object {
                                                            "term": 1,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 2,
                                                            "year": 2025,
                                                          },
                                                          Object {
                                                            "term": 3,
                                                            "year": 2025,
                                                          },
                                                        ]
                                                      }
                                                      units={6}
                                                    >
                                                      <Modal
                                                        autoFocus={true}
                                                        backdrop={true}
                                                        backdropTransition={[Function]}
                                                        className="modal"
                                                        containerClassName="modal-open"
                                                        enforceFocus={true}
                                                        keyboard={true}
                                                        manager={
                                                          BootstrapModalManager {
                                                            "adjustAndStore": [Function],
                                                            "containers": Array [],
                                                            "data": Array [],
                                                            "handleContainerOverflow": true,
                                                            "hideSiblingNodes": true,
                                                            "modals": Array [],
                                                            "restore": [Function],
                                                            "scrollbarSize": 0,
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        onEnter={[Function]}
                                                        onEntering={[Function]}
                                                        onExited={[Function]}
                                                        onHide={[Function]}
                                                        onMouseUp={[Function]}
                                                        renderBackdrop={[Function]}
                                                        restoreFocus={true}
                                                        role="dialog"
                                                        show={false}
                                                        style={Object {}}
                                                        transition={[Function]}
                                                      />
                                                    </Modal>
                                                  </Bootstrap(Modal)>
                                                </CourseInfoModal>
                                              </div>
                                            </Course>
                                          </div>
                                        </styled.div>
                                      </Droppable>
                                    </ConnectFunction>
                                  </div>
                                </styled.div>
                              </CourseDropBox>
                              <SearchCourses
                                add_event={[Function]}
                              >
                                <styled.div>
                                  <div
                                    className="sc-gZMcBi fUOKYm"
                                  >
                                    <form>
                                      <styled.input
                                        onChange={[Function]}
                                        placeholder="Search for a course..."
                                      >
                                        <input
                                          className="sc-gqjmRU gZnPWC"
                                          onChange={[Function]}
                                          placeholder="Search for a course..."
                                        />
                                      </styled.input>
                                    </form>
                                  </div>
                                </styled.div>
                              </SearchCourses>
                            </body>
                            <footer />
                          </div>
                        </styled.div>
                      </InfoBar>
                    </div>
                  </styled.div>
                </div>
              </Provider>
            </App>
          </ErrorBoundary>
        </DragDropContext>
      </div>
    </styled.div>
  </div>
</Timeline>
`;

exports[`Render degree planning timeline view displays missing course under requirements if a required course is missing 1`] = `
<Timeline
  match={
    Object {
      "params": Object {
        "degree": "3778",
        "reqs": undefined,
      },
    }
  }
>
  <div>
    <Navbar
      bg="dark"
      collapseOnSelect={false}
      expand={true}
      id="navbar"
      variant="dark"
    >
      <nav
        className="navbar navbar-expand navbar-dark bg-dark"
        id="navbar"
      >
        <NavbarBrand
          href="/"
        >
          <a
            className="navbar-brand"
            href="/"
          >
             
            <styled.img
              alt="logo"
              src="/images/logo.png"
            >
              <StyledComponent
                alt="logo"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-cMljjf",
                      "isStatic": false,
                      "lastClassName": "fmxJth",
                      "rules": Array [
                        "
  width: 5%;
  height: 5%;
  margin: 1%;
",
                      ],
                    },
                    "displayName": "styled.img",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-cMljjf",
                    "target": "img",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                src="/images/logo.png"
              >
                <img
                  alt="logo"
                  className="sc-cMljjf fmxJth"
                  src="/images/logo.png"
                />
              </StyledComponent>
            </styled.img>
             OnCourse
          </a>
        </NavbarBrand>
        <Nav
          className="mr-auto"
          fill={false}
          justify={false}
        >
          <ForwardRef
            as="div"
            className="mr-auto navbar-nav"
            onSelect={[Function]}
          >
            <div
              className="mr-auto navbar-nav"
              onKeyDown={[Function]}
            />
          </ForwardRef>
        </Nav>
        <Styled(Button)
          id="save"
          onClick={[Function]}
          variant="outline-info"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jAaTju",
                  "isStatic": false,
                  "lastClassName": "hGJEqN",
                  "rules": Array [
                    "
  margin: 0px 8px;
",
                  ],
                },
                "displayName": "Styled(Button)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jAaTju",
                "target": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "active": false,
                    "disabled": false,
                    "type": "button",
                    "variant": "primary",
                  },
                  "displayName": "Button",
                  "render": [Function],
                },
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="save"
            onClick={[Function]}
            variant="outline-info"
          >
            <Button
              active={false}
              className="sc-jAaTju hGJEqN"
              disabled={false}
              id="save"
              onClick={[Function]}
              type="button"
              variant="outline-info"
            >
              <button
                className="sc-jAaTju hGJEqN btn btn-outline-info"
                disabled={false}
                id="save"
                onClick={[Function]}
                type="button"
              >
                <i
                  className="fa fa-save"
                />
              </button>
            </Button>
          </StyledComponent>
        </Styled(Button)>
      </nav>
    </Navbar>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-eHgmQL",
              "isStatic": false,
              "lastClassName": "jXXGiK",
              "rules": Array [
                "
  display: flex;
  justify-content: center;
  margin: 0px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-eHgmQL",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-eHgmQL jXXGiK"
        >
          <DragDropContext
            onDragEnd={[Function]}
            onDragStart={[Function]}
          >
            <ErrorBoundary>
              <App
                contextId="1"
                liftInstruction="Draggable item. Ensure your screen reader is not in browse mode and then press space bar to lift."
                onDragEnd={[Function]}
                onDragStart={[Function]}
                setCallbacks={[Function]}
              >
                <Provider
                  context={
                    Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": null,
                      "_currentValue2": null,
                      "_threadCount": 0,
                    }
                  }
                  store={
                    Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    }
                  }
                >
                  <div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-jWBwVP",
                              "isStatic": false,
                              "lastClassName": "jPdbIS",
                              "rules": Array [
                                "
  float: left;
  width: 70%;
  padding: 10px;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-jWBwVP",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-jWBwVP jPdbIS"
                        >
                          <div
                            id="timeline"
                          >
                            <div
                              key="2019"
                            >
                              <styled.div
                                key="2019"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP1511",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "DPST1091",
                                            "name": "Programming Fundamentals",
                                            "prereqs": "",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "MATH1131",
                                            "coreqs": "",
                                            "equivalents": "DPST1013",
                                            "exclusions": "DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202",
                                            "name": "Mathematics 1A",
                                            "prereqs": "",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "MATH1081",
                                            "coreqs": "(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)",
                                            "equivalents": "",
                                            "exclusions": "MATH1090",
                                            "name": "Discrete Mathematics",
                                            "prereqs": "",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2019"
                                      removeCourse={[Function]}
                                      termId="1 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="1 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="1 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="1 2019"
                                                    >
                                                      <Course
                                                        code="COMP1511"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="DPST1091"
                                                        index={0}
                                                        key="COMP1511"
                                                        name="Programming Fundamentals"
                                                        prereqs=""
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP1511"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP1511"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP1511"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP1511"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP1511"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP1511"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP1511"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP1511"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP1511"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP1511"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP1511
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP1511"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="DPST1091"
                                                            index={0}
                                                            name="Programming Fundamentals"
                                                            onHide={[Function]}
                                                            prereqs=""
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="MATH1131"
                                                        coreqs=""
                                                        equivalents="DPST1013"
                                                        exclusions="DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202"
                                                        index={1}
                                                        key="MATH1131"
                                                        name="Mathematics 1A"
                                                        prereqs=""
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1131"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1131"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1131"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1131"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="MATH1131"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="MATH1131"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="MATH1131"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="MATH1131"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="MATH1131"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="MATH1131"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1131
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1131"
                                                            coreqs=""
                                                            equivalents="DPST1013"
                                                            exclusions="DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202"
                                                            index={1}
                                                            name="Mathematics 1A"
                                                            onHide={[Function]}
                                                            prereqs=""
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="MATH1081"
                                                        coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                        equivalents=""
                                                        exclusions="MATH1090"
                                                        index={2}
                                                        key="MATH1081"
                                                        name="Discrete Mathematics"
                                                        prereqs=""
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1081"
                                                            index={2}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1081"
                                                              index={2}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1081"
                                                                index={2}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1081"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={2}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="MATH1081"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="MATH1081"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="MATH1081"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="MATH1081"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="MATH1081"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="MATH1081"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1081
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1081"
                                                            coreqs="(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)"
                                                            equivalents=""
                                                            exclusions="MATH1090"
                                                            index={2}
                                                            name="Discrete Mathematics"
                                                            onHide={[Function]}
                                                            prereqs=""
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP1521",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "DPST1092",
                                            "name": "Computer Systems Fundamentals",
                                            "prereqs": "(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "MATH1231",
                                            "coreqs": "",
                                            "equivalents": "DPST1014",
                                            "exclusions": "ECON1202
MATH1241
DPST1014",
                                            "name": "Mathematics 1B",
                                            "prereqs": "(DPST1013 OR MATH1131 OR MATH1141)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2019"
                                      removeCourse={[Function]}
                                      termId="2 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="2 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="2 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="2 2019"
                                                    >
                                                      <Course
                                                        code="COMP1521"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="DPST1092"
                                                        index={0}
                                                        key="COMP1521"
                                                        name="Computer Systems Fundamentals"
                                                        prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP1521"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP1521"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP1521"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP1521"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP1521"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP1521"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP1521"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP1521"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP1521"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP1521"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP1521
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP1521"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="DPST1092"
                                                            index={0}
                                                            name="Computer Systems Fundamentals"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="MATH1231"
                                                        coreqs=""
                                                        equivalents="DPST1014"
                                                        exclusions="ECON1202
MATH1241
DPST1014"
                                                        index={1}
                                                        key="MATH1231"
                                                        name="Mathematics 1B"
                                                        prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="MATH1231"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="MATH1231"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="MATH1231"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="MATH1231"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="MATH1231"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="MATH1231"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="MATH1231"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="MATH1231"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="MATH1231"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="MATH1231"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        MATH1231
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="MATH1231"
                                                            coreqs=""
                                                            equivalents="DPST1014"
                                                            exclusions="ECON1202
MATH1241
DPST1014"
                                                            index={1}
                                                            name="Mathematics 1B"
                                                            onHide={[Function]}
                                                            prereqs="(DPST1013 OR MATH1131 OR MATH1141)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP1531",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "SENG1020
SENG1031
SENG1010",
                                            "name": "Software Engineering Fundamentals",
                                            "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "COMP2521",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "COMP1927",
                                            "name": "Data Structures and Algorithms",
                                            "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                                            "terms": Array [
                                              Object {
                                                "term": 1,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 1,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2019"
                                      removeCourse={[Function]}
                                      termId="3 2019"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2019
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2019"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2019"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="3 2019"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="3 2019"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="3 2019"
                                                    >
                                                      <Course
                                                        code="COMP1531"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="SENG1020
SENG1031
SENG1010"
                                                        index={0}
                                                        key="COMP1531"
                                                        name="Software Engineering Fundamentals"
                                                        prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP1531"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP1531"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP1531"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP1531"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP1531"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP1531"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP1531"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP1531"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP1531"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP1531"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP1531
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP1531"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="SENG1020
SENG1031
SENG1010"
                                                            index={0}
                                                            name="Software Engineering Fundamentals"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="COMP2521"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="COMP1927"
                                                        index={1}
                                                        key="COMP2521"
                                                        name="Data Structures and Algorithms"
                                                        prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 1,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 1,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP2521"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP2521"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP2521"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP2521"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP2521"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP2521"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP2521"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP2521"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP2521"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP2521"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP2521
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP2521"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="COMP1927"
                                                            index={1}
                                                            name="Data Structures and Algorithms"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 1,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                            <div
                              key="2020"
                            >
                              <styled.div
                                key="2020"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2020"
                                      removeCourse={[Function]}
                                      termId="1 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="1 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="1 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="1 2020"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP3121",
                                            "coreqs": "",
                                            "equivalents": "COMP3821
COMP9801
COMP3120
COMP9101",
                                            "exclusions": "",
                                            "name": "Algorithms and Programming Techniques",
                                            "prereqs": "(COMP1927 OR COMP2521)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                          Object {
                                            "code": "COMP2511",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "COMP2911
COMP2011",
                                            "name": "Object-Oriented Design & Programming",
                                            "prereqs": "COMP1531
(COMP1927 OR COMP2521)",
                                            "terms": Array [
                                              Object {
                                                "term": 2,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 2,
                                                "year": 2025,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2020"
                                      removeCourse={[Function]}
                                      termId="2 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="2 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="2 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="2 2020"
                                                    >
                                                      <Course
                                                        code="COMP3121"
                                                        coreqs=""
                                                        equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                        exclusions=""
                                                        index={0}
                                                        key="COMP3121"
                                                        name="Algorithms and Programming Techniques"
                                                        prereqs="(COMP1927 OR COMP2521)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP3121"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP3121"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP3121"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP3121"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP3121"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP3121"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP3121"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP3121"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP3121"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP3121"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP3121
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP3121"
                                                            coreqs=""
                                                            equivalents="COMP3821
COMP9801
COMP3120
COMP9101"
                                                            exclusions=""
                                                            index={0}
                                                            name="Algorithms and Programming Techniques"
                                                            onHide={[Function]}
                                                            prereqs="(COMP1927 OR COMP2521)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <Course
                                                        code="COMP2511"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="COMP2911
COMP2011"
                                                        index={1}
                                                        key="COMP2511"
                                                        name="Object-Oriented Design & Programming"
                                                        prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 2,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 2,
                                                              "year": 2025,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP2511"
                                                            index={1}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP2511"
                                                              index={1}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP2511"
                                                                index={1}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP2511"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={1}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP2511"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP2511"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP2511"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP2511"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP2511"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP2511"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP2511
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP2511"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="COMP2911
COMP2011"
                                                            index={1}
                                                            name="Object-Oriented Design & Programming"
                                                            onHide={[Function]}
                                                            prereqs="COMP1531
(COMP1927 OR COMP2521)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 2,
                                                                  "year": 2025,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2020"
                                      removeCourse={[Function]}
                                      termId="3 2020"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2020
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2020"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2020"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="3 2020"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="3 2020"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="3 2020"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                            <div
                              key="2021"
                            >
                              <styled.div
                                key="2021"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-cvbbAY",
                                        "isStatic": false,
                                        "lastClassName": "bXnZdr",
                                        "rules": Array [
                                          "
  display: flex;
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-cvbbAY",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="sc-cvbbAY bXnZdr"
                                  >
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="1 2021"
                                      removeCourse={[Function]}
                                      termId="1 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T1 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="1 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="1 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="1 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="1 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="1 2021"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={Array []}
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="2 2021"
                                      removeCourse={[Function]}
                                      termId="2 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T2 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="2 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="2 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="2 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="2 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="2 2021"
                                                    >
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                    <Term
                                      courses={
                                        Array [
                                          Object {
                                            "code": "COMP4920",
                                            "coreqs": "",
                                            "equivalents": "",
                                            "exclusions": "BINF4920
SENG4920
SENG4921
COMP2920",
                                            "name": "Management and Ethics",
                                            "prereqs": "Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)",
                                            "terms": Array [
                                              Object {
                                                "term": 3,
                                                "year": 2019,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2020,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2021,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2022,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2023,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2024,
                                              },
                                              Object {
                                                "term": 3,
                                                "year": 2025,
                                              },
                                            ],
                                            "units": 6,
                                          },
                                        ]
                                      }
                                      getError={[Function]}
                                      getWarn={[Function]}
                                      key="3 2021"
                                      removeCourse={[Function]}
                                      termId="3 2021"
                                    >
                                      <styled.div>
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "dsUfca",
                                                "rules": Array [
                                                  "
  margin-top: 8px;
  margin-bottom: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 400px;
  text-align: center;
  display: flex;
  flex-direction: column;
",
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="sc-htpNat dsUfca"
                                          >
                                            <styled.h3>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "AcyJd",
                                                      "rules": Array [
                                                        "
  padding: 8px;
  font-family: Arial, Helvetica, sans-serif;
  border-bottom: 1px solid lightgrey;
  margin: 0px;
",
                                                      ],
                                                    },
                                                    "displayName": "styled.h3",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "h3",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <h3
                                                  className="sc-bxivhb AcyJd"
                                                >
                                                  T3 2021
                                                </h3>
                                              </StyledComponent>
                                            </styled.h3>
                                            <ConnectFunction
                                              direction="vertical"
                                              droppableId="3 2021"
                                              getContainerForClone={[Function]}
                                              ignoreContainerClipping={false}
                                              isCombineEnabled={false}
                                              isDropDisabled={false}
                                              mode="standard"
                                              renderClone={null}
                                              type="DEFAULT"
                                            >
                                              <Droppable
                                                direction="vertical"
                                                droppableId="3 2021"
                                                getContainerForClone={[Function]}
                                                ignoreContainerClipping={false}
                                                isCombineEnabled={false}
                                                isDropDisabled={false}
                                                mode="standard"
                                                placeholder={null}
                                                renderClone={null}
                                                shouldAnimatePlaceholder={false}
                                                snapshot={
                                                  Object {
                                                    "draggingFromThisWith": null,
                                                    "draggingOverWith": null,
                                                    "isDraggingOver": false,
                                                    "isUsingPlaceholder": false,
                                                  }
                                                }
                                                type="DEFAULT"
                                                updateViewportMaxScroll={[Function]}
                                                useClone={null}
                                              >
                                                <styled.div
                                                  data-rbd-droppable-context-id="1"
                                                  data-rbd-droppable-id="3 2021"
                                                  isDraggingOver={false}
                                                >
                                                  <StyledComponent
                                                    data-rbd-droppable-context-id="1"
                                                    data-rbd-droppable-id="3 2021"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "kIIFkF",
                                                          "rules": Array [
                                                            "
  padding: 8px;
  flex-grow: 1;
  min-height: 100px;
  transition: background-color 0.2s ease;
  background-color: ",
                                                            [Function],
                                                            ";
",
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={[Function]}
                                                    isDraggingOver={false}
                                                  >
                                                    <div
                                                      className="sc-ifAKCX kIIFkF"
                                                      data-rbd-droppable-context-id="1"
                                                      data-rbd-droppable-id="3 2021"
                                                    >
                                                      <Course
                                                        code="COMP4920"
                                                        coreqs=""
                                                        equivalents=""
                                                        exclusions="BINF4920
SENG4920
SENG4921
COMP2920"
                                                        index={0}
                                                        key="COMP4920"
                                                        name="Management and Ethics"
                                                        prereqs="Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)"
                                                        removeCourse={[Function]}
                                                        terms={
                                                          Array [
                                                            Object {
                                                              "term": 3,
                                                              "year": 2019,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2020,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2021,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2022,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2023,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2024,
                                                            },
                                                            Object {
                                                              "term": 3,
                                                              "year": 2025,
                                                            },
                                                          ]
                                                        }
                                                        units={6}
                                                      >
                                                        <div>
                                                          <PublicDraggable
                                                            draggableId="COMP4920"
                                                            index={0}
                                                          >
                                                            <PrivateDraggable
                                                              canDragInteractiveElements={false}
                                                              draggableId="COMP4920"
                                                              index={0}
                                                              isClone={false}
                                                              isEnabled={true}
                                                              shouldRespectForcePress={false}
                                                            >
                                                              <Connect(Draggable)
                                                                canDragInteractiveElements={false}
                                                                draggableId="COMP4920"
                                                                index={0}
                                                                isClone={false}
                                                                isEnabled={true}
                                                                shouldRespectForcePress={false}
                                                              >
                                                                <Draggable
                                                                  canDragInteractiveElements={false}
                                                                  draggableId="COMP4920"
                                                                  dropAnimationFinished={[Function]}
                                                                  index={0}
                                                                  isClone={false}
                                                                  isEnabled={true}
                                                                  mapped={
                                                                    Object {
                                                                      "combineTargetFor": null,
                                                                      "offset": Object {
                                                                        "x": 0,
                                                                        "y": 0,
                                                                      },
                                                                      "shouldAnimateDisplacement": true,
                                                                      "snapshot": Object {
                                                                        "combineTargetFor": null,
                                                                        "combineWith": null,
                                                                        "draggingOver": null,
                                                                        "dropAnimation": null,
                                                                        "isClone": false,
                                                                        "isDragging": false,
                                                                        "isDropAnimating": false,
                                                                        "mode": null,
                                                                      },
                                                                      "type": "SECONDARY",
                                                                    }
                                                                  }
                                                                  shouldRespectForcePress={false}
                                                                >
                                                                  <styled.div
                                                                    aria-labelledby="rbd-lift-instruction-1"
                                                                    data-rbd-drag-handle-context-id="1"
                                                                    data-rbd-drag-handle-draggable-id="COMP4920"
                                                                    data-rbd-draggable-context-id="1"
                                                                    data-rbd-draggable-id="COMP4920"
                                                                    draggable={false}
                                                                    hasError={false}
                                                                    hasWarning={false}
                                                                    isDragging={false}
                                                                    onClick={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onTransitionEnd={null}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <StyledComponent
                                                                      aria-labelledby="rbd-lift-instruction-1"
                                                                      data-rbd-drag-handle-context-id="1"
                                                                      data-rbd-drag-handle-draggable-id="COMP4920"
                                                                      data-rbd-draggable-context-id="1"
                                                                      data-rbd-draggable-id="COMP4920"
                                                                      draggable={false}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bwzfXH",
                                                                            "isStatic": false,
                                                                            "lastClassName": "bBrTaZ",
                                                                            "rules": Array [
                                                                              "
  color: black;
  border: 2px solid lightgrey;
  border-radius: 6px;
  padding: 8px;
  margin-bottom: 8px;
  background-color: ",
                                                                              [Function],
                                                                              ";

  &:hover {
    background-color: ",
                                                                              [Function],
                                                                              ";
  }
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bwzfXH",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={[Function]}
                                                                      hasError={false}
                                                                      hasWarning={false}
                                                                      isDragging={false}
                                                                      onClick={[Function]}
                                                                      onDragStart={[Function]}
                                                                      onTransitionEnd={null}
                                                                      style={
                                                                        Object {
                                                                          "transform": null,
                                                                          "transition": null,
                                                                        }
                                                                      }
                                                                      tabIndex={0}
                                                                    >
                                                                      <div
                                                                        aria-labelledby="rbd-lift-instruction-1"
                                                                        className="sc-bwzfXH bBrTaZ"
                                                                        data-rbd-drag-handle-context-id="1"
                                                                        data-rbd-drag-handle-draggable-id="COMP4920"
                                                                        data-rbd-draggable-context-id="1"
                                                                        data-rbd-draggable-id="COMP4920"
                                                                        draggable={false}
                                                                        onClick={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onTransitionEnd={null}
                                                                        style={
                                                                          Object {
                                                                            "transform": null,
                                                                            "transition": null,
                                                                          }
                                                                        }
                                                                        tabIndex={0}
                                                                      >
                                                                        COMP4920
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Draggable>
                                                              </Connect(Draggable)>
                                                            </PrivateDraggable>
                                                          </PublicDraggable>
                                                          <CourseInfoModal
                                                            code="COMP4920"
                                                            coreqs=""
                                                            equivalents=""
                                                            exclusions="BINF4920
SENG4920
SENG4921
COMP2920"
                                                            index={0}
                                                            name="Management and Ethics"
                                                            onHide={[Function]}
                                                            prereqs="Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)"
                                                            removeCourse={[Function]}
                                                            show={false}
                                                            terms={
                                                              Array [
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2019,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2020,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2021,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2022,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2023,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2024,
                                                                },
                                                                Object {
                                                                  "term": 3,
                                                                  "year": 2025,
                                                                },
                                                              ]
                                                            }
                                                            units={6}
                                                          >
                                                            <Bootstrap(Modal)
                                                              aria-labelledby="contained-modal-title-vcenter"
                                                              centered={true}
                                                              onHide={[Function]}
                                                              show={false}
                                                              size="lg"
                                                            >
                                                              <Modal
                                                                animation={true}
                                                                aria-labelledby="contained-modal-title-vcenter"
                                                                autoFocus={true}
                                                                backdrop={true}
                                                                bsPrefix="modal"
                                                                centered={true}
                                                                dialogAs={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "displayName": "ModalDialog",
                                                                    "render": [Function],
                                                                  }
                                                                }
                                                                enforceFocus={true}
                                                                keyboard={true}
                                                                manager={
                                                                  BootstrapModalManager {
                                                                    "adjustAndStore": [Function],
                                                                    "containers": Array [],
                                                                    "data": Array [],
                                                                    "handleContainerOverflow": true,
                                                                    "hideSiblingNodes": true,
                                                                    "modals": Array [],
                                                                    "restore": [Function],
                                                                    "scrollbarSize": 0,
                                                                  }
                                                                }
                                                                onHide={[Function]}
                                                                restoreFocus={true}
                                                                show={false}
                                                                size="lg"
                                                              >
                                                                <Modal
                                                                  autoFocus={true}
                                                                  backdrop={true}
                                                                  backdropTransition={[Function]}
                                                                  className="modal"
                                                                  containerClassName="modal-open"
                                                                  enforceFocus={true}
                                                                  keyboard={true}
                                                                  manager={
                                                                    BootstrapModalManager {
                                                                      "adjustAndStore": [Function],
                                                                      "containers": Array [],
                                                                      "data": Array [],
                                                                      "handleContainerOverflow": true,
                                                                      "hideSiblingNodes": true,
                                                                      "modals": Array [],
                                                                      "restore": [Function],
                                                                      "scrollbarSize": 0,
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  onEnter={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExited={[Function]}
                                                                  onHide={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  renderBackdrop={[Function]}
                                                                  restoreFocus={true}
                                                                  role="dialog"
                                                                  show={false}
                                                                  style={Object {}}
                                                                  transition={[Function]}
                                                                />
                                                              </Modal>
                                                            </Bootstrap(Modal)>
                                                          </CourseInfoModal>
                                                        </div>
                                                      </Course>
                                                      <AnimateInOut
                                                        on={null}
                                                        shouldAnimate={false}
                                                      />
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Droppable>
                                            </ConnectFunction>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Term>
                                  </div>
                                </StyledComponent>
                              </styled.div>
                            </div>
                          </div>
                          <Styled(Button)
                            onClick={[Function]}
                            variant="info"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jDwBTQ",
                                    "isStatic": false,
                                    "lastClassName": "cmgcpW",
                                    "rules": Array [
                                      "
&& {
  display: inline-block;
  font-weight: 400;
  font-size: 30px;
  padding: .375rem .75rem;
  border: 1px solid transparent;
  border-radius: .25rem;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
  min-width: 55px;
  margin: 6px;
  text-align: center;
  vertical-align: middle;
  padding: 0px;
",
                                    ],
                                  },
                                  "displayName": "Styled(Button)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jDwBTQ",
                                  "target": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "defaultProps": Object {
                                      "active": false,
                                      "disabled": false,
                                      "type": "button",
                                      "variant": "primary",
                                    },
                                    "displayName": "Button",
                                    "render": [Function],
                                  },
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              variant="info"
                            >
                              <Button
                                active={false}
                                className="sc-jDwBTQ cmgcpW"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="info"
                              >
                                <button
                                  className="sc-jDwBTQ cmgcpW btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  +
                                </button>
                              </Button>
                            </StyledComponent>
                          </Styled(Button)>
                          <Styled(Button)
                            onClick={[Function]}
                            variant="info"
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-jDwBTQ",
                                    "isStatic": false,
                                    "lastClassName": "cmgcpW",
                                    "rules": Array [
                                      "
&& {
  display: inline-block;
  font-weight: 400;
  font-size: 30px;
  padding: .375rem .75rem;
  border: 1px solid transparent;
  border-radius: .25rem;
  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
  min-width: 55px;
  margin: 6px;
  text-align: center;
  vertical-align: middle;
  padding: 0px;
",
                                    ],
                                  },
                                  "displayName": "Styled(Button)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-jDwBTQ",
                                  "target": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "defaultProps": Object {
                                      "active": false,
                                      "disabled": false,
                                      "type": "button",
                                      "variant": "primary",
                                    },
                                    "displayName": "Button",
                                    "render": [Function],
                                  },
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                              variant="info"
                            >
                              <Button
                                active={false}
                                className="sc-jDwBTQ cmgcpW"
                                disabled={false}
                                onClick={[Function]}
                                type="button"
                                variant="info"
                              >
                                <button
                                  className="sc-jDwBTQ cmgcpW btn btn-info"
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  -
                                </button>
                              </Button>
                            </StyledComponent>
                          </Styled(Button)>
                        </div>
                      </StyledComponent>
                    </styled.div>
                    <styled.div>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-brqgnP",
                              "isStatic": false,
                              "lastClassName": "hpJmTp",
                              "rules": Array [
                                "
  display: flex;
  justify-content: flex-end;
  width: 30%;
",
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-brqgnP",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="sc-brqgnP hpJmTp"
                        >
                          <InfoBar
                            add_event={[Function]}
                            degree_id="3778"
                            degree_name="Computer Science"
                            degree_reqs={
                              Array [
                                Object {
                                  "filter_type": "Required courses",
                                  "info": "COMP3900",
                                  "units": 6,
                                },
                                Object {
                                  "filter_type": "Courses with options",
                                  "info": "[ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]",
                                  "units": 30,
                                },
                                Object {
                                  "filter_type": "General education",
                                  "info": "Any general education course",
                                  "units": 12,
                                },
                                Object {
                                  "filter_type": "Free electives",
                                  "info": "Any free elective",
                                  "units": 36,
                                },
                              ]
                            }
                            remove_course={[Function]}
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jKJlTe",
                                      "isStatic": false,
                                      "lastClassName": "cqzQuE",
                                      "rules": Array [
                                        "
  padding-top: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 350px;
  height: 100%;
  text-align: center;
  overflow-y: scroll;
  overflow: overlay;
  background-color: #343a40;
  color: white;
",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jKJlTe",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="sc-jKJlTe cqzQuE"
                                >
                                  <styled.h3>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-eNQAEJ",
                                            "isStatic": false,
                                            "lastClassName": "fJsUCm",
                                            "rules": Array [
                                              "
  padding: 8px;
  margin: 0px;
  font-family: inherit;
  border-bottom: 1px solid lightgrey;
  color: inherit;
",
                                            ],
                                          },
                                          "displayName": "styled.h3",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-eNQAEJ",
                                          "target": "h3",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <h3
                                        className="sc-eNQAEJ fJsUCm"
                                      >
                                        Computer Science
                                        <br />
                                        3778
                                      </h3>
                                    </StyledComponent>
                                  </styled.h3>
                                  <Styled(Card)
                                    bg="dark"
                                    text="white"
                                  >
                                    <StyledComponent
                                      bg="dark"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "Body": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardBody",
                                            "render": [Function],
                                          },
                                          "Footer": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardFooter",
                                            "render": [Function],
                                          },
                                          "Header": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardHeader",
                                            "render": [Function],
                                          },
                                          "Img": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": Object {
                                              "variant": null,
                                            },
                                            "displayName": "CardImg",
                                            "render": [Function],
                                          },
                                          "ImgOverlay": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardImgOverlay",
                                            "render": [Function],
                                          },
                                          "Link": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardLink",
                                            "render": [Function],
                                          },
                                          "Subtitle": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardSubtitle",
                                            "render": [Function],
                                          },
                                          "Text": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardText",
                                            "render": [Function],
                                          },
                                          "Title": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardTitle",
                                            "render": [Function],
                                          },
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kkGfuU",
                                            "isStatic": false,
                                            "lastClassName": "kUNnRZ",
                                            "rules": Array [
                                              "
",
                                            ],
                                          },
                                          "displayName": "Styled(Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kkGfuU",
                                          "target": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Body": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardBody",
                                              "render": [Function],
                                            },
                                            "Footer": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardFooter",
                                              "render": [Function],
                                            },
                                            "Header": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardHeader",
                                              "render": [Function],
                                            },
                                            "Img": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": Object {
                                                "variant": null,
                                              },
                                              "displayName": "CardImg",
                                              "render": [Function],
                                            },
                                            "ImgOverlay": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardImgOverlay",
                                              "render": [Function],
                                            },
                                            "Link": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardLink",
                                              "render": [Function],
                                            },
                                            "Subtitle": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardSubtitle",
                                              "render": [Function],
                                            },
                                            "Text": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardText",
                                              "render": [Function],
                                            },
                                            "Title": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardTitle",
                                              "render": [Function],
                                            },
                                            "defaultProps": Object {
                                              "body": false,
                                            },
                                            "displayName": "Card",
                                            "render": [Function],
                                          },
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="white"
                                    >
                                      <Card
                                        bg="dark"
                                        body={false}
                                        className="sc-kkGfuU kUNnRZ"
                                        text="white"
                                      >
                                        <div
                                          className="sc-kkGfuU kUNnRZ card bg-dark text-white"
                                        >
                                          <Styled(CardHeader)
                                            aria-controls="collapse-add-course"
                                            aria-expanded={true}
                                            onClick={[Function]}
                                          >
                                            <StyledComponent
                                              aria-controls="collapse-add-course"
                                              aria-expanded={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-iAyFgw",
                                                    "isStatic": false,
                                                    "lastClassName": "kQfvWD",
                                                    "rules": Array [
                                                      "
  transition: color 0.2s ease;
  color: rgba(255, 255, 255, 0.75);
  display: flex;
  align-items: center

  &:hover {
    color: rgba(255, 255, 255, 1)
  };

",
                                                    ],
                                                  },
                                                  "displayName": "Styled(CardHeader)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-iAyFgw",
                                                  "target": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": undefined,
                                                    "displayName": "CardHeader",
                                                    "render": [Function],
                                                  },
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                            >
                                              <CardHeader
                                                aria-controls="collapse-add-course"
                                                aria-expanded={true}
                                                className="sc-iAyFgw kQfvWD"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-controls="collapse-add-course"
                                                  aria-expanded={true}
                                                  className="sc-iAyFgw kQfvWD card-header"
                                                  onClick={[Function]}
                                                >
                                                  <styled.i
                                                    className="fa fa-chevron-down"
                                                  >
                                                    <StyledComponent
                                                      className="fa fa-chevron-down"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hSdWYo",
                                                            "isStatic": false,
                                                            "lastClassName": "ifQXLO",
                                                            "rules": Array [
                                                              "
  float: left;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.i",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hSdWYo",
                                                          "target": "i",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <i
                                                        className="sc-hSdWYo ifQXLO fa fa-chevron-down"
                                                      />
                                                    </StyledComponent>
                                                  </styled.i>
                                                  <styled.h5>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hMqMXs",
                                                            "isStatic": false,
                                                            "lastClassName": "igQMIg",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  text-align: center;
  width: 100%;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.h5",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hMqMXs",
                                                          "target": "h5",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <h5
                                                        className="sc-hMqMXs igQMIg"
                                                      >
                                                        Add a Course
                                                      </h5>
                                                    </StyledComponent>
                                                  </styled.h5>
                                                </div>
                                              </CardHeader>
                                            </StyledComponent>
                                          </Styled(CardHeader)>
                                          <Collapse
                                            appear={false}
                                            dimension="height"
                                            getDimensionValue={[Function]}
                                            in={true}
                                            mountOnEnter={false}
                                            timeout={300}
                                            unmountOnExit={false}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              aria-expanded={null}
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={300}
                                              unmountOnExit={false}
                                            >
                                              <CardBody
                                                aria-expanded={null}
                                                className="collapse show"
                                              >
                                                <div
                                                  aria-expanded={null}
                                                  className="collapse show card-body"
                                                >
                                                  <p>
                                                    Search for a course and click on it. Then drag the course into your timeline from the 
                                                    <b>
                                                      Add
                                                    </b>
                                                     box.
                                                  </p>
                                                  <CourseDropBox
                                                    remove_course={[Function]}
                                                    type="Add"
                                                  >
                                                    <styled.div>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-EHOje",
                                                              "isStatic": false,
                                                              "lastClassName": "gIuBAP",
                                                              "rules": Array [
                                                                "
  margin: 8px;
  border: 1px solid lightgrey;
  border-radius: 2px;
  width: 220px;

  margin-left: auto;
  margin-right: auto;

  display: flex;
  flex-direction: column;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-EHOje",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <div
                                                          className="sc-EHOje gIuBAP"
                                                        >
                                                          <styled.h5>
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-bZQynM",
                                                                    "isStatic": false,
                                                                    "lastClassName": "btxUkQ",
                                                                    "rules": Array [
                                                                      "
  padding: 8px;
",
                                                                    ],
                                                                  },
                                                                  "displayName": "styled.h5",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-bZQynM",
                                                                  "target": "h5",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <h5
                                                                className="sc-bZQynM btxUkQ"
                                                              >
                                                                Add
                                                              </h5>
                                                            </StyledComponent>
                                                          </styled.h5>
                                                          <ConnectFunction
                                                            direction="vertical"
                                                            droppableId="Add"
                                                            getContainerForClone={[Function]}
                                                            ignoreContainerClipping={false}
                                                            isCombineEnabled={false}
                                                            isDropDisabled={false}
                                                            mode="standard"
                                                            renderClone={null}
                                                            type="DEFAULT"
                                                          >
                                                            <Droppable
                                                              direction="vertical"
                                                              droppableId="Add"
                                                              getContainerForClone={[Function]}
                                                              ignoreContainerClipping={false}
                                                              isCombineEnabled={false}
                                                              isDropDisabled={false}
                                                              mode="standard"
                                                              placeholder={null}
                                                              renderClone={null}
                                                              shouldAnimatePlaceholder={false}
                                                              snapshot={
                                                                Object {
                                                                  "draggingFromThisWith": null,
                                                                  "draggingOverWith": null,
                                                                  "isDraggingOver": false,
                                                                  "isUsingPlaceholder": false,
                                                                }
                                                              }
                                                              type="DEFAULT"
                                                              updateViewportMaxScroll={[Function]}
                                                              useClone={null}
                                                            >
                                                              <styled.div
                                                                data-rbd-droppable-context-id="1"
                                                                data-rbd-droppable-id="Add"
                                                              >
                                                                <StyledComponent
                                                                  data-rbd-droppable-context-id="1"
                                                                  data-rbd-droppable-id="Add"
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "sc-gzVnrw",
                                                                        "isStatic": false,
                                                                        "lastClassName": "hQQdYy",
                                                                        "rules": Array [
                                                                          "
  padding: 8px;
  flex-grow: 1;
  min-height: 50px;
",
                                                                        ],
                                                                      },
                                                                      "displayName": "styled.div",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "sc-gzVnrw",
                                                                      "target": "div",
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={[Function]}
                                                                >
                                                                  <div
                                                                    className="sc-gzVnrw hQQdYy"
                                                                    data-rbd-droppable-context-id="1"
                                                                    data-rbd-droppable-id="Add"
                                                                  >
                                                                    <AnimateInOut
                                                                      on={null}
                                                                      shouldAnimate={false}
                                                                    />
                                                                  </div>
                                                                </StyledComponent>
                                                              </styled.div>
                                                            </Droppable>
                                                          </ConnectFunction>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </CourseDropBox>
                                                  <SearchCourses
                                                    add_event={[Function]}
                                                  >
                                                    <styled.div>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-kGXeez",
                                                              "isStatic": false,
                                                              "lastClassName": "fvprwv",
                                                              "rules": Array [
                                                                "
  padding: 3px;
  margin: 0;
  text-align: center;
",
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-kGXeez",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <div
                                                          className="sc-kGXeez fvprwv"
                                                        >
                                                          <form>
                                                            <Styled(styled.input)
                                                              onChange={[Function]}
                                                              placeholder="Search for a course..."
                                                            >
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-kpOJdX",
                                                                      "isStatic": false,
                                                                      "lastClassName": "cgQYTz",
                                                                      "rules": Array [
                                                                        "

  &:focus {
    outline: none;
    &::placeholder {
      color: transparent;
    }
  }
  box-shadow: 10px 10px grey;
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 60%;
  padding: 1% 4%;
  margin-bottom: 2%;
  transition: background-colour .2s ease-in;
  font-size: 30px;
  line-height: 18px;
  background-color: transparent;
  background-image: url(\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Cpath d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E\\");
  background-repeat: no-repeat;
  background-size: 40px 40px;
  background-position: 95% center;

  border-radius: 50px;
  border: 1px solid #575756;
",
                                                                        "

&::placeholder {
  color: rgba(255, 255, 255, 0.75);
}
  width: 95%;
  padding: 12px 24px;
  margin-bottom: 1%;

  font-size: 14px;
  line-height: 18px;
  font-color: white;

  color: white;
  background-size: 18px 18px;
  background-position: 95% center;
  border: 1px solid white;

  box-shadow: 0px 0px;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "Styled(styled.input)",
                                                                    "foldedComponentIds": Array [
                                                                      "sc-kAzzGY",
                                                                    ],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-kpOJdX",
                                                                    "target": "input",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={
                                                                  Object {
                                                                    "current": <input
                                                                      class="sc-kAzzGY sc-kpOJdX cgQYTz"
                                                                      placeholder="Search for a course..."
                                                                    />,
                                                                  }
                                                                }
                                                                onChange={[Function]}
                                                                placeholder="Search for a course..."
                                                              >
                                                                <input
                                                                  className="sc-kAzzGY sc-kpOJdX cgQYTz"
                                                                  onChange={[Function]}
                                                                  placeholder="Search for a course..."
                                                                />
                                                              </StyledComponent>
                                                            </Styled(styled.input)>
                                                          </form>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </SearchCourses>
                                                </div>
                                              </CardBody>
                                            </Transition>
                                          </Collapse>
                                        </div>
                                      </Card>
                                    </StyledComponent>
                                  </Styled(Card)>
                                  <Styled(Card)
                                    bg="dark"
                                    text="white"
                                  >
                                    <StyledComponent
                                      bg="dark"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "Body": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardBody",
                                            "render": [Function],
                                          },
                                          "Footer": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardFooter",
                                            "render": [Function],
                                          },
                                          "Header": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardHeader",
                                            "render": [Function],
                                          },
                                          "Img": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": Object {
                                              "variant": null,
                                            },
                                            "displayName": "CardImg",
                                            "render": [Function],
                                          },
                                          "ImgOverlay": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardImgOverlay",
                                            "render": [Function],
                                          },
                                          "Link": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardLink",
                                            "render": [Function],
                                          },
                                          "Subtitle": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardSubtitle",
                                            "render": [Function],
                                          },
                                          "Text": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardText",
                                            "render": [Function],
                                          },
                                          "Title": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "defaultProps": undefined,
                                            "displayName": "CardTitle",
                                            "render": [Function],
                                          },
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-kkGfuU",
                                            "isStatic": false,
                                            "lastClassName": "kUNnRZ",
                                            "rules": Array [
                                              "
",
                                            ],
                                          },
                                          "displayName": "Styled(Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-kkGfuU",
                                          "target": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Body": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardBody",
                                              "render": [Function],
                                            },
                                            "Footer": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardFooter",
                                              "render": [Function],
                                            },
                                            "Header": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardHeader",
                                              "render": [Function],
                                            },
                                            "Img": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": Object {
                                                "variant": null,
                                              },
                                              "displayName": "CardImg",
                                              "render": [Function],
                                            },
                                            "ImgOverlay": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardImgOverlay",
                                              "render": [Function],
                                            },
                                            "Link": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardLink",
                                              "render": [Function],
                                            },
                                            "Subtitle": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardSubtitle",
                                              "render": [Function],
                                            },
                                            "Text": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardText",
                                              "render": [Function],
                                            },
                                            "Title": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "defaultProps": undefined,
                                              "displayName": "CardTitle",
                                              "render": [Function],
                                            },
                                            "defaultProps": Object {
                                              "body": false,
                                            },
                                            "displayName": "Card",
                                            "render": [Function],
                                          },
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      text="white"
                                    >
                                      <Card
                                        bg="dark"
                                        body={false}
                                        className="sc-kkGfuU kUNnRZ"
                                        text="white"
                                      >
                                        <div
                                          className="sc-kkGfuU kUNnRZ card bg-dark text-white"
                                        >
                                          <Styled(CardHeader)
                                            aria-controls="collapse-requirements"
                                            aria-expanded={false}
                                            onClick={[Function]}
                                          >
                                            <StyledComponent
                                              aria-controls="collapse-requirements"
                                              aria-expanded={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-iAyFgw",
                                                    "isStatic": false,
                                                    "lastClassName": "kQfvWD",
                                                    "rules": Array [
                                                      "
  transition: color 0.2s ease;
  color: rgba(255, 255, 255, 0.75);
  display: flex;
  align-items: center

  &:hover {
    color: rgba(255, 255, 255, 1)
  };

",
                                                    ],
                                                  },
                                                  "displayName": "Styled(CardHeader)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-iAyFgw",
                                                  "target": Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "defaultProps": undefined,
                                                    "displayName": "CardHeader",
                                                    "render": [Function],
                                                  },
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                            >
                                              <CardHeader
                                                aria-controls="collapse-requirements"
                                                aria-expanded={false}
                                                className="sc-iAyFgw kQfvWD"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  aria-controls="collapse-requirements"
                                                  aria-expanded={false}
                                                  className="sc-iAyFgw kQfvWD card-header"
                                                  onClick={[Function]}
                                                >
                                                  <styled.i
                                                    className="fa fa-chevron-left"
                                                  >
                                                    <StyledComponent
                                                      className="fa fa-chevron-left"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hSdWYo",
                                                            "isStatic": false,
                                                            "lastClassName": "ifQXLO",
                                                            "rules": Array [
                                                              "
  float: left;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.i",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hSdWYo",
                                                          "target": "i",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <i
                                                        className="sc-hSdWYo ifQXLO fa fa-chevron-left"
                                                      />
                                                    </StyledComponent>
                                                  </styled.i>
                                                  <styled.h5>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-hMqMXs",
                                                            "isStatic": false,
                                                            "lastClassName": "igQMIg",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  text-align: center;
  width: 100%;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.h5",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-hMqMXs",
                                                          "target": "h5",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <h5
                                                        className="sc-hMqMXs igQMIg"
                                                      >
                                                        Requirements
                                                      </h5>
                                                    </StyledComponent>
                                                  </styled.h5>
                                                </div>
                                              </CardHeader>
                                            </StyledComponent>
                                          </Styled(CardHeader)>
                                          <Collapse
                                            appear={false}
                                            dimension="height"
                                            getDimensionValue={[Function]}
                                            in={false}
                                            mountOnEnter={false}
                                            timeout={300}
                                            unmountOnExit={false}
                                          >
                                            <Transition
                                              addEndListener={[Function]}
                                              appear={false}
                                              aria-expanded={null}
                                              enter={true}
                                              exit={true}
                                              in={false}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              timeout={300}
                                              unmountOnExit={false}
                                            >
                                              <CardBody
                                                aria-expanded={null}
                                                className="collapse"
                                              >
                                                <div
                                                  aria-expanded={null}
                                                  className="collapse card-body"
                                                >
                                                  <styled.div>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-kEYyzF",
                                                            "isStatic": false,
                                                            "lastClassName": "eFkzlT",
                                                            "rules": Array [
                                                              "
  padding: 4px;
  margin-bottom: 4px;
  font-family: inherit;
  text-align: left;
  color: inherit;
",
                                                            ],
                                                          },
                                                          "displayName": "styled.div",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-kEYyzF",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="sc-kEYyzF eFkzlT"
                                                      >
                                                        <Requirements
                                                          degree_reqs={
                                                            Array [
                                                              Object {
                                                                "filter_type": "Required courses",
                                                                "info": "COMP3900",
                                                                "units": 6,
                                                              },
                                                              Object {
                                                                "filter_type": "Courses with options",
                                                                "info": "[ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]",
                                                                "units": 30,
                                                              },
                                                              Object {
                                                                "filter_type": "General education",
                                                                "info": "Any general education course",
                                                                "units": 12,
                                                              },
                                                              Object {
                                                                "filter_type": "Free electives",
                                                                "info": "Any free elective",
                                                                "units": 36,
                                                              },
                                                            ]
                                                          }
                                                        >
                                                          <div>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Required courses
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        6 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                COMP3900
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Courses with options
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        30 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                [ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        General education
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        12 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                Any general education course
                                                              </li>
                                                            </ul>
                                                            <styled.div>
                                                              <StyledComponent
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "sc-dxgOiQ",
                                                                      "isStatic": false,
                                                                      "lastClassName": "fFqiNH",
                                                                      "rules": Array [
                                                                        "
  display: flex;
  justify-content: space-between;
",
                                                                      ],
                                                                    },
                                                                    "displayName": "styled.div",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "sc-dxgOiQ",
                                                                    "target": "div",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                              >
                                                                <div
                                                                  className="sc-dxgOiQ fFqiNH"
                                                                >
                                                                  <styled.p>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ckVGcZ",
                                                                            "isStatic": false,
                                                                            "lastClassName": "JYsSe",
                                                                            "rules": Array [
                                                                              "
  font-weight: bold;
",
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.p",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ckVGcZ",
                                                                          "target": "p",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <p
                                                                        className="sc-ckVGcZ JYsSe"
                                                                      >
                                                                        Free electives
                                                                      </p>
                                                                    </StyledComponent>
                                                                  </styled.p>
                                                                  <p>
                                                                    <span
                                                                      style={
                                                                        Object {
                                                                          "color": "#17a2b8",
                                                                        }
                                                                      }
                                                                    >
                                                                      <u>
                                                                        36 UOC
                                                                      </u>
                                                                       remaining
                                                                    </span>
                                                                  </p>
                                                                </div>
                                                              </StyledComponent>
                                                            </styled.div>
                                                            <ul>
                                                              <li>
                                                                Any free elective
                                                              </li>
                                                            </ul>
                                                          </div>
                                                        </Requirements>
                                                      </div>
                                                    </StyledComponent>
                                                  </styled.div>
                                                </div>
                                              </CardBody>
                                            </Transition>
                                          </Collapse>
                                        </div>
                                      </Card>
                                    </StyledComponent>
                                  </Styled(Card)>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </InfoBar>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </div>
                </Provider>
              </App>
            </ErrorBoundary>
          </DragDropContext>
        </div>
      </StyledComponent>
    </styled.div>
  </div>
</Timeline>
`;

exports[`Render degree planning timeline view renders correctly as part of timeline 1`] = `
<div>
  <Navbar
    bg="dark"
    collapseOnSelect={false}
    expand={true}
    id="navbar"
    variant="dark"
  >
    <NavbarBrand
      href="/"
    >
       
      <styled.img
        alt="logo"
        src="/images/logo.png"
      />
       OnCourse
    </NavbarBrand>
    <Nav
      className="mr-auto"
      fill={false}
      justify={false}
    />
    <Styled(Button)
      id="save"
      onClick={[Function]}
      variant="outline-info"
    >
      <i
        className="fa fa-save"
      />
    </Styled(Button)>
  </Navbar>
  <styled.div>
    <DragDropContext
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <div>
        <styled.div>
          <div
            id="timeline"
          >
            <div
              key="2019"
            >
              <styled.div
                key="2019"
              >
                <Term
                  courses={
                    Array [
                      Object {
                        "code": "COMP1511",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "DPST1091",
                        "name": "Programming Fundamentals",
                        "prereqs": "",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                      Object {
                        "code": "MATH1131",
                        "coreqs": "",
                        "equivalents": "DPST1013",
                        "exclusions": "DPST1013
MATH1151
MATH1031
MATH1141
ECON2291
MATH1011
ECON1202",
                        "name": "Mathematics 1A",
                        "prereqs": "",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                      Object {
                        "code": "MATH1081",
                        "coreqs": "(DPST1013 OR MATH1131 OR MATH1141 OR MATH1151)",
                        "equivalents": "",
                        "exclusions": "MATH1090",
                        "name": "Discrete Mathematics",
                        "prereqs": "",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                    ]
                  }
                  getError={[Function]}
                  getWarn={[Function]}
                  key="1 2019"
                  removeCourse={[Function]}
                  termId="1 2019"
                />
                <Term
                  courses={
                    Array [
                      Object {
                        "code": "COMP1521",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "DPST1092",
                        "name": "Computer Systems Fundamentals",
                        "prereqs": "(COMP1911 OR COMP1917 OR COMP1511 OR DPST1091)",
                        "terms": Array [
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                      Object {
                        "code": "MATH1231",
                        "coreqs": "",
                        "equivalents": "DPST1014",
                        "exclusions": "ECON1202
MATH1241
DPST1014",
                        "name": "Mathematics 1B",
                        "prereqs": "(DPST1013 OR MATH1131 OR MATH1141)",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                    ]
                  }
                  getError={[Function]}
                  getWarn={[Function]}
                  key="2 2019"
                  removeCourse={[Function]}
                  termId="2 2019"
                />
                <Term
                  courses={
                    Array [
                      Object {
                        "code": "COMP1531",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "SENG1020
SENG1031
SENG1010",
                        "name": "Software Engineering Fundamentals",
                        "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                      Object {
                        "code": "COMP2521",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "COMP1927",
                        "name": "Data Structures and Algorithms",
                        "prereqs": "(COMP1921 OR COMP1917 OR COMP1511 OR DPST1091)",
                        "terms": Array [
                          Object {
                            "term": 1,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 1,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 1,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 1,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 1,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 1,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 1,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                    ]
                  }
                  getError={[Function]}
                  getWarn={[Function]}
                  key="3 2019"
                  removeCourse={[Function]}
                  termId="3 2019"
                />
              </styled.div>
            </div>
            <div
              key="2020"
            >
              <styled.div
                key="2020"
              >
                <Term
                  courses={Array []}
                  getError={[Function]}
                  getWarn={[Function]}
                  key="1 2020"
                  removeCourse={[Function]}
                  termId="1 2020"
                />
                <Term
                  courses={
                    Array [
                      Object {
                        "code": "COMP3121",
                        "coreqs": "",
                        "equivalents": "COMP3821
COMP9801
COMP3120
COMP9101",
                        "exclusions": "",
                        "name": "Algorithms and Programming Techniques",
                        "prereqs": "(COMP1927 OR COMP2521)",
                        "terms": Array [
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                      Object {
                        "code": "COMP2511",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "COMP2911
COMP2011",
                        "name": "Object-Oriented Design & Programming",
                        "prereqs": "COMP1531
(COMP1927 OR COMP2521)",
                        "terms": Array [
                          Object {
                            "term": 2,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 2,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 2,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 2,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 2,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 2,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 2,
                            "year": 2025,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                    ]
                  }
                  getError={[Function]}
                  getWarn={[Function]}
                  key="2 2020"
                  removeCourse={[Function]}
                  termId="2 2020"
                />
                <Term
                  courses={Array []}
                  getError={[Function]}
                  getWarn={[Function]}
                  key="3 2020"
                  removeCourse={[Function]}
                  termId="3 2020"
                />
              </styled.div>
            </div>
            <div
              key="2021"
            >
              <styled.div
                key="2021"
              >
                <Term
                  courses={Array []}
                  getError={[Function]}
                  getWarn={[Function]}
                  key="1 2021"
                  removeCourse={[Function]}
                  termId="1 2021"
                />
                <Term
                  courses={Array []}
                  getError={[Function]}
                  getWarn={[Function]}
                  key="2 2021"
                  removeCourse={[Function]}
                  termId="2 2021"
                />
                <Term
                  courses={
                    Array [
                      Object {
                        "code": "COMP4920",
                        "coreqs": "",
                        "equivalents": "",
                        "exclusions": "BINF4920
SENG4920
SENG4921
COMP2920",
                        "name": "Management and Ethics",
                        "prereqs": "Enrollment in Computer Science (3778)
Final year in your degree
(COMP2511 OR COMP2911)",
                        "terms": Array [
                          Object {
                            "term": 3,
                            "year": 2019,
                          },
                          Object {
                            "term": 3,
                            "year": 2020,
                          },
                          Object {
                            "term": 3,
                            "year": 2021,
                          },
                          Object {
                            "term": 3,
                            "year": 2022,
                          },
                          Object {
                            "term": 3,
                            "year": 2023,
                          },
                          Object {
                            "term": 3,
                            "year": 2024,
                          },
                          Object {
                            "term": 3,
                            "year": 2025,
                          },
                        ],
                        "units": 6,
                      },
                    ]
                  }
                  getError={[Function]}
                  getWarn={[Function]}
                  key="3 2021"
                  removeCourse={[Function]}
                  termId="3 2021"
                />
              </styled.div>
            </div>
          </div>
          <Styled(Button)
            onClick={[Function]}
            variant="info"
          >
            +
          </Styled(Button)>
          <Styled(Button)
            onClick={[Function]}
            variant="info"
          >
            -
          </Styled(Button)>
        </styled.div>
        <styled.div>
          <InfoBar
            add_event={[Function]}
            degree_id="3778"
            degree_name="Computer Science"
            degree_reqs={
              Array [
                Object {
                  "filter_type": "Required courses",
                  "info": "COMP3900",
                  "units": 6,
                },
                Object {
                  "filter_type": "Courses with options",
                  "info": "[ Field 'COMP' ] AND [ (level 3) OR (level 4) OR (level 6) OR (level 9) ]",
                  "units": 30,
                },
                Object {
                  "filter_type": "General education",
                  "info": "Any general education course",
                  "units": 12,
                },
                Object {
                  "filter_type": "Free electives",
                  "info": "Any free elective",
                  "units": 36,
                },
              ]
            }
            remove_course={[Function]}
          />
        </styled.div>
      </div>
    </DragDropContext>
  </styled.div>
</div>
`;
